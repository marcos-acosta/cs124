{"version":3,"sources":["Components/AppHeader.js","Components/TaskItem/TaskItemOptions.js","Components/TaskItem/TaskCheckbox.js","Components/TaskItem/TaskTextLabel.js","Components/TaskItem/TaskExpander.js","Components/TaskItem/TaskItem.js","Components/TaskList.js","Components/CompletedSection.js","Components/AddItem.js","Components/OptionSelector.js","App.js","Components/FireBaseApp.js","index.js"],"names":["AppHeader","id","PRIORITIES","TaskItemOptions","props","className","taskInEditModeId","onClick","onClickEditButton","handleDeletion","slice","reverse","map","p","index","priority","handleChangePriority","repeat","priorityToButton","ToDoCheckbox","type","checked","onChange","handleCompletion","TaskTextLabel","isCompleted","shouldFadeOut","expandedTaskId","taskName","text","length","value","e","setTaskProperty","indexOf","replace","trimNewline","target","onKeyUp","key","setTaskInEditModeId","ref","textInput","onBlur","deselectOnEditMode","TaskExpander","expandedId","expandTaskCallback","TaskItem","useState","setShouldFadeOut","useRef","setTimeout","deleteTask","useEffect","current","focus","TaskList","tasks","taskItem","toggleExpandedTaskId","CompletedSection","deleteCompleted","AddItem","addTaskAndEdit","disabled","inEditMode","OptionSelector","onChangeCallback","options","i","optionValue","optionName","SORTING_OPTIONS","App","setExpandedTaskId","addTask","setOrderingBy","loading","error","data","filter","FireBaseApp","frozenTask","setFrozenTask","orderingBy","completeDataQuery","db","collection","useCollection","sortFunctions","a","b","frozen","toLowerCase","newestTop","oldestTop","docs","doc","task","console","log","element","delete","field","update","forEach","new_id","generateUniqueID","set","created","firebase","database","ServerValue","TIMESTAMP","sort","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4cbb2f9.chunk.js","sourcesContent":["import './AppHeader.css'\n\nexport default function AppHeader() {\n  return (\n    <div id=\"toDoHeader\">\n      <h2>\n        todo ðŸ¦‘\n      </h2>\n    </div>\n  )\n}","import \"./TaskItemOptions.css\"\n\nconst PRIORITIES = [1, 2, 3];\n\nexport default function TaskItemOptions(props) {\n  const priorityToButton = (priority, index) => {\n    return  <button className={`priorityButton ${props.priority === priority ? `whiteText priority${priority}` : ''}`}\n                    onClick={() => props.handleChangePriority(priority)}\n                    key={index}>\n                      {'!'.repeat(priority)}\n            </button>\n  }\n\n  return <>\n    <div className=\"toDoLowerHalf\" />\n    <div className=\"toDoItemOptions\">\n      <button className={`editButton toDoItemActionButton ${props.taskInEditModeId === props.id ? 'grayText' : ''}`} \n              onClick={props.onClickEditButton}>\n                edit\n      </button>\n      <button className={`deleteButton toDoItemActionButton ${props.taskInEditModeId === props.id ? 'grayText' : ''}`}\n              onClick={() => props.handleDeletion()}>\n                delete\n      </button>\n      {\n        PRIORITIES.slice().reverse().map((p, index) => priorityToButton(p, index))\n      }\n    </div>\n  </>\n}","import \"./TaskCheckbox.css\"\n\nexport default function ToDoCheckbox(props) {\n  return (\n    <div className=\"toDoCheckbox\">\n      <input  type=\"checkbox\" \n              id={`label-${props.id}`} \n              checked={props.checked} \n              onChange={props.handleCompletion}/>\n    </div>\n  )\n}","import \"./TaskTextLabel.css\"\n\nconst TEXT_CHAR_LIMIT = 80;\n\nfunction elideText(text) {\n  return text.length > TEXT_CHAR_LIMIT ? text.slice(0, TEXT_CHAR_LIMIT) + 'â€¦' : text;\n}\n\nfunction trimNewline(text) {\n  while (text.indexOf('\\n') !== -1) {\n    text = text.replace('\\n', '');\n  }\n  return text;\n}\n\nexport default function TaskTextLabel(props) {\n  return (\n    <div className=\"toDoLabel\">\n      {\n        props.taskInEditModeId !== props.id &&\n          <label id={`label-${props.id}`} className={props.isCompleted || props.shouldFadeOut ? 'strikethrough' : ''}>\n            {\n              props.expandedTaskId === props.id\n              ? props.taskName\n              : elideText(props.taskName)\n            }\n          </label>\n      }\n      <textarea \n        value={props.taskName} \n        onChange={e => props.setTaskProperty(props.id, 'taskName', trimNewline(e.target.value))}\n        onKeyUp={e => {if (e.key === 'Enter') props.setTaskInEditModeId(null)}} \n        ref={props.textInput}\n        className={`${props.taskInEditModeId !== props.id ? 'hidden' : ''}`}\n        onBlur={props.deselectOnEditMode} />\n    </div>\n  )\n}","import \"./TaskExpander.css\"\n\nexport default function TaskExpander(props) {\n  return (\n    <div className=\"toDoOptions\">\n      <div  className={`toDoDropdown ${props.expandedId === props.id ? 'selected' : ''}`}\n            onClick={() => props.expandTaskCallback(props.id)}>\n        <div className={`optionsArrow ${props.expandedId === props.id ? 'rotated' : ''}`}>\n          âž”\n        </div>\n      </div>\n    </div>\n  );\n}","import { useEffect, useRef, useState } from 'react';\nimport TaskItemOptions from './TaskItemOptions';\nimport TaskCheckbox from './TaskCheckbox';\nimport TaskTextLabel from './TaskTextLabel';\nimport TaskExpander from './TaskExpander';\nimport './TaskItem.css';\n\nexport default function TaskItem(props) {\n  const [shouldFadeOut, setShouldFadeOut] = useState(false);\n\n  const textInput = useRef(null);\n  const DISAPPEAR_DURATION_MS = 500;\n\n  useEffect(() => {\n    if (textInput.current && props.taskInEditModeId === props.id) {\n      textInput.current.focus();\n    }\n  }, [props.taskInEditModeId, props.id]);\n\n  function priorityToMarker(priority) {\n    return <div className={`priorityExclamationDiv priority${priority}`}>{'!'.repeat(priority)}</div>;\n  }\n\n  function onClickEditButton() {\n    props.setTaskInEditModeId(props.id);\n  }\n\n  function deselectOnEditMode() {\n    props.setTaskInEditModeId(null);\n    if (!props.taskName) {\n      handleDeletion();\n    }\n  }\n\n  function handleDeletion() {\n    setShouldFadeOut(true);\n    setTimeout(() => props.deleteTask(props.id), DISAPPEAR_DURATION_MS);\n  }\n\n  function handleCompletion(e) {\n    setShouldFadeOut(true);\n    let checked = e.target.checked;\n    setTimeout(() => props.setTaskProperty(props.id, 'isCompleted', checked), DISAPPEAR_DURATION_MS);\n  }\n\n  function handleChangePriority(priority) {\n    if (props.priority === priority) {\n      props.setTaskProperty(props.id, 'priority', 0);\n    } else {\n      props.setTaskProperty(props.id, 'priority', priority);\n    }\n  }\n\n  return (\n    <>\n      <div className={`priorityMarker supportsInvisibility ${shouldFadeOut ? 'invisible' : ''}`}>\n        {priorityToMarker(props.priority)}\n      </div>\n      <div className={`toDoItem supportsInvisibility ${shouldFadeOut ? 'invisible' : ''} ${props.expandedTaskId === props.id ? 'highlighted' : ''}`}>\n          <TaskCheckbox id={props.id} checked={props.isCompleted} handleCompletion={handleCompletion} />\n          <TaskTextLabel \n            {...props}\n            textInput={textInput}\n            deselectOnEditMode={deselectOnEditMode}\n            shouldFadeOut={shouldFadeOut} />\n          {\n            !props.isCompleted && \n              <TaskExpander id={props.id}\n                            expandedId={props.expandedTaskId}\n                            expandTaskCallback={props.expandTaskCallback} />\n          }\n          {\n            props.expandedTaskId === props.id &&\n              <TaskItemOptions\n                priority={props.priority}\n                id={props.id}\n                taskInEditModeId={props.taskInEditModeId}\n                handleChangePriority={handleChangePriority}\n                onClickEditButton={onClickEditButton}\n                handleDeletion={handleDeletion} />\n          }\n      </div>\n    </>\n  )\n}","import TaskItem from './TaskItem/TaskItem';\nimport \"./TaskList.css\";\n\nexport default function TaskList(props) {\n\n  return (\n    <div className=\"taskListDiv\">\n      {\n        props.tasks.map(taskItem => \n          <TaskItem {...taskItem} \n                key={taskItem.id} \n                expandedTaskId={props.expandedTaskId}\n                expandTaskCallback={props.toggleExpandedTaskId}\n                setTaskProperty={props.setTaskProperty}\n                deleteTask={props.deleteTask}\n                setTaskInEditModeId={props.setTaskInEditModeId}\n                taskInEditModeId={props.taskInEditModeId} />)\n      }\n    </div>\n  )\n}","import { useState } from 'react'\nimport './CompletedSection.css'\nimport TaskList from './TaskList'\n\nexport default function CompletedSection(props) {\n  const [shouldFadeOut, setShouldFadeOut] = useState(false);\n\n  function handleClear() {\n    setShouldFadeOut(true);\n    setTimeout(() => props.deleteCompleted(), 500);\n  }\n\n  return (\n    <div className={`completedSectionContainer ${shouldFadeOut ? 'invisible' : ''}`}>\n      <div id=\"completedItemsHeader\">\n        <h3>\n          completed\n          <button id=\"clearCompleted\" onClick={handleClear}>clear</button>\n        </h3>\n      </div>\n      <TaskList tasks={props.tasks} \n        setTaskProperty={props.setTaskProperty} \n        deleteTask={props.deleteTask} />\n    </div>\n  )\n}","import './AddItem.css'\n\nexport default function AddItem(props) {\n  return (\n    <button id=\"addItemFooter\" onClick={() => props.addTaskAndEdit()} disabled={props.inEditMode}>\n      + add item\n    </button>\n  )\n}","import \"./OptionSelector.css\";\n\nexport default function OptionSelector(props) {\n  return <select onChange={e => props.onChangeCallback(e.target.value)} className=\"optionSelector\">\n    {\n      props.options.map(([optionValue, optionName], i) => \n        <option key={i} value={optionValue}>{optionName}</option>\n      )\n    }\n  </select>\n}","import './App.css';\nimport AppHeader from './Components/AppHeader';\nimport TaskList from './Components/TaskList';\nimport CompletedSection from './Components/CompletedSection';\nimport AddItem from './Components/AddItem';\nimport OptionSelector from './Components/OptionSelector';\nimport { useState } from 'react';\n\nconst SORTING_OPTIONS = [['oldestTop', 'oldest'], ['newestTop', 'newest'], ['taskName', 'name'], ['priority', 'priority']];\n\nfunction App(props) {\n  const [expandedTaskId, setExpandedTaskId] = useState(null);\n\n  const toggleExpandedTaskId = (id) => {\n    setExpandedTaskId(expandedTaskId === id ? null : id);\n  }\n\n  function addTaskAndEdit() {\n    const id = props.addTask();\n    props.setTaskInEditModeId(id);\n    setExpandedTaskId(id);\n  }\n\n  return (\n    <>\n      <AppHeader />\n      <div id=\"pageContent\">\n        <div className=\"noTopMargin\">\n          <div className=\"sortByText\">sort by:</div>\n          <OptionSelector options={SORTING_OPTIONS} onChangeCallback={props.setOrderingBy} />\n        </div>\n        {\n          props.loading ? <div className=\"infoText\">loading...</div> : \n          props.error ? <div className=\"infoText errorText\">an unexpected error occurred!</div> :\n          <>\n            {props.data.filter(taskItem => !taskItem.isCompleted).length === 0 && \n              <div id=\"noTasksPlaceholder\" onClick={addTaskAndEdit}>add a task!</div>\n            }\n            <TaskList tasks={props.data.filter(taskItem => !taskItem.isCompleted)} \n                      setTaskProperty={props.setTaskProperty} \n                      deleteTask={props.deleteTask}\n                      taskInEditModeId={props.taskInEditModeId}\n                      setTaskInEditModeId={props.setTaskInEditModeId}\n                      toggleExpandedTaskId={toggleExpandedTaskId}\n                      expandedTaskId={expandedTaskId}\n                       />\n            {\n              props.data.filter(taskItem => taskItem.isCompleted).length === 0\n                ? ''\n                : <CompletedSection \n                    deleteCompleted={props.deleteCompleted}\n                    tasks={props.data.filter(taskItem => taskItem.isCompleted)}\n                    setTaskProperty={props.setTaskProperty}\n                    deleteTask={props.deleteTask}/>\n            }\n          </>\n        }\n      </div>\n      <AddItem inEditMode={props.taskInEditModeId !== null || props.loading ? true : false} addTaskAndEdit={addTaskAndEdit} />\n    </>\n  );\n}\n\nexport default App;","import { useCollection } from \"react-firebase-hooks/firestore\";\nimport firebase from 'firebase/compat';\nimport { generateUniqueID } from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport App from \"../App\";\nimport { useEffect, useState } from \"react\";\n\nconst COLLECTION_NAME = 'marcos-acosta-tasks';\n\nexport default function FireBaseApp(props) {\n  const [frozenTask, setFrozenTask] = useState(null);\n  const [taskInEditModeId, setTaskInEditModeId] = useState(null);\n  const [orderingBy, setOrderingBy] = useState(\"created\");\n  const completeDataQuery = props.db.collection(COLLECTION_NAME);\n  const [value, loading, error] = useCollection(completeDataQuery);\n\n  const sortFunctions = {\n    priority: (a, b) => frozen(b)['priority'] - frozen(a)['priority'],\n    taskName: (a, b) => frozen(a)['taskName'].toLowerCase() < frozen(b)['taskName'].toLowerCase() ? -1 : 1,\n    newestTop: (a, b) => frozen(a)['created'] < frozen(b)['created'] ? 1 : -1,\n    oldestTop: (a, b) => frozen(a)['created'] < frozen(b)['created'] ? -1 : 1\n  }\n\n  useEffect(() => {\n    if (!loading && !error) {\n      if (taskInEditModeId) {\n        setFrozenTask(\n          value.docs.map(doc => doc.data()).filter(task => task.id === taskInEditModeId)[0]\n        );\n      } else {\n        setFrozenTask(null);\n      }\n    }\n  // eslint-disable-next-line\n  }, [taskInEditModeId, loading, error]);\n\n  useEffect(() => {\n    console.log(frozenTask);\n  }, [frozenTask]);\n\n  const frozen = (element) => {\n    return frozenTask && element.id === frozenTask.id ? frozenTask : element;\n  }\n\n  const setTaskProperty = (id, field, value) => {\n    const docRef = completeDataQuery.doc(id);\n    docRef.update({[field]: value});\n  }\n\n  const deleteTask = (id) => {\n    const docRef = completeDataQuery.doc(id);\n    docRef.delete();\n  }\n\n  const deleteCompleted = () => \n    value.docs.map(doc => doc.data()).filter(task => task.isCompleted).forEach(task => deleteTask(task.id));\n\n  const addTask = () => {\n    const new_id = generateUniqueID();\n    const docRef = completeDataQuery.doc(new_id);\n    docRef.set({\n      taskName: \"\",\n      isCompleted: false,\n      id: new_id,\n      created: firebase.database.ServerValue.TIMESTAMP,\n      priority: 0\n    });\n    return new_id;\n  }\n\n  const getSortedTasks = () => {\n    return loading\n      ? null\n      : value.docs.map(doc => doc.data()).sort(sortFunctions[orderingBy]);\n  }\n\n  return <App setTaskProperty={setTaskProperty}\n              deleteTask={deleteTask}\n              deleteCompleted={deleteCompleted}\n              setOrderingBy={setOrderingBy}\n              addTask={addTask}\n              data={getSortedTasks()}\n              loading={loading}\n              error={error}\n              taskInEditModeId={taskInEditModeId}\n              setTaskInEditModeId={setTaskInEditModeId} />\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport FireBaseApp from './Components/FireBaseApp';\nimport firebase from \"firebase/compat\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCd9qqxvMpEKpBzwfWcc2tlRFa6ICaLH_s\",\n  authDomain: \"hmc-cs124-fa21-labs.firebaseapp.com\",\n  projectId: \"hmc-cs124-fa21-labs\",\n  storageBucket: \"hmc-cs124-fa21-labs.appspot.com\",\n  messagingSenderId: \"949410042946\",\n  appId: \"1:949410042946:web:0113b139a7e3cd1cc709db\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\nfunction render() {\n  ReactDOM.render(\n    <React.StrictMode>\n      <FireBaseApp db={db} />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\nrender();"],"sourceRoot":""}