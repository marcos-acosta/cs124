{"version":3,"sources":["Components/TaskView/TaskItemOptions.js","Components/TaskView/TaskCheckbox.js","Components/InputKeepCursor.js","Components/TaskView/TaskTextLabel.js","Components/TaskView/TaskExpander.js","Components/TaskView/TaskItem.js","Components/TaskView/TaskList.js","Components/TaskView/CompletedSection.js","Components/AddItem.js","Components/OptionSelector.js","Components/TaskView/ListSideMenu.js","Components/InfoCard.js","Components/AuthAndSharing/SharingPanel.js","Components/AuthAndSharing/SignedInStatus.js","Components/TaskView/TaskView.js","Components/TaskView/TaskSupplier.js","Components/ListView/ListCard.js","Components/ListView/ListViewer.js","Components/App.js","Components/AuthAndSharing/LogIn.js","Components/AuthAndSharing/SignUp.js","Components/AuthAndSharing/UnauthenticatedPage.js","Components/AuthenticationLayer.js","index.js"],"names":["PRIORITIES","PRIORITY_TO_TEXT","TaskItemOptions","props","inEditMode","taskInEditModeId","id","className","onClick","onClickEditButton","aria-label","taskName","handleDeletion","map","p","index","priority","handleChangePriority","repeat","priorityToButton","ToDoCheckbox","type","checked","onChange","handleCompletion","InputKeepCursor","value","returnRef","longText","rest","useState","length","cursor","setCursor","ref","useRef","useEffect","input","current","setSelectionRange","handleChange","e","target","selectionStart","TaskTextLabel","isCompleted","shouldFadeOut","expandedTaskId","text","slice","setTaskProperty","indexOf","replace","trimNewline","onKeyUp","key","preventDefault","setTaskInEditModeId","onBlur","deselectOnEditMode","TaskExpander","isExpanded","expandedId","expandTaskCallback","color","TaskItem","setShouldFadeOut","textInput","setTimeout","deleteTask","focus","TaskList","tasks","taskItem","toggleExpandedTaskId","CompletedSection","startDisappearing","setstartDisappearing","deleteCompleted","task","join","AddItem","isNarrow","addTaskAndEdit","disabled","OptionSelector","onChangeCallback","options","i","optionValue","optionName","ListSideMenu","lists","list","setCurrentListId","currentListId","colorTheme","listName","InfoCard","error","SharingPanel","emailInput","setEmailInput","revokeAllPermissions","email","removeFromListField","handlePermissionsChange","addToListField","onClosePanel","admins","includes","user","onSubmit","placeholder","sharedEmails","owner","pendingInvitations","SignedInStatus","setIsExpanded","sentVerificationEmail","setSentVerificationEmail","emailVerified","sendEmailVerification","auth","signOut","SORTING_OPTIONS","TasksApp","setExpandedTaskId","showSharingPanel","setShowSharingPanel","currentList","find","addTask","sharedWith","setOrderingBy","loading","data","filter","TaskView","isDesktopWide","TaskSupplier","frozenTask","setFrozenTask","orderingBy","taskQuery","db","collection","collectionName","doc","useCollection","taskCollection","tasksLoading","tasksError","useMediaQuery","maxWidth","minWidth","sortFunctions","a","b","frozen","toLowerCase","newestTop","oldestTop","docs","element","delete","field","update","forEach","new_id","generateUniqueID","set","created","firebase","database","ServerValue","TIMESTAMP","sort","COLOR_TO_NAME","NAME_TO_COLOR","Object","fromEntries","entries","k","ListCard","showColorPicker","setShowColorPicker","listNameSpanAmount","isPendingList","listInEditModeId","onBlurCallback","setListInEditModeId","deleteList","onChangeComplete","setListProperty","hex","colors","keys","triangle","onAcceptCallback","onRejectCallback","ListViewer","addListCallback","addList","removeFromPending","pendingLists","COLLECTION_NAME","App","fullListData","listQuery","where","pendingListQuery","listCollection","listsLoading","listsError","pendingCollection","pendingLoading","pendingError","docRef","get","then","listResponse","value_","val","googleProvider","GoogleAuthProvider","LogIn","setEmail","password","setPassword","useSignInResponse","useSignInWithEmailAndPassword","signInWithEmailAndPassword","code","signInWithPopup","src","alt","SignUp","retypePassword","setRetypePassword","passwordMatchError","setPasswordMatchError","useCreateUserWithEmailAndPassword","createUserWithEmailAndPassword","UnauthenticatedPage","showLogIn","setShowLogIn","showSignUp","AuthenticationLayer","useAuthState","userLoading","userError","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uqBAEMA,EAAa,CAAC,EAAG,EAAG,GACpBC,EAAmB,CAAC,MAAO,SAAU,QAE5B,SAASC,EAAgBC,GACtC,IAAMC,EAAaD,EAAME,mBAAqBF,EAAMG,GAWpD,OAAO,qCACL,qBAAKC,UAAU,kBACf,sBAAKA,UAAU,kBAAf,UACE,wBAAQA,UAAS,0CAAsCH,EAAa,WAAa,IACzEI,QAASL,EAAMM,kBACfC,aAAA,0BAA+BP,EAAMQ,UAF7C,kBAKA,wBAAQJ,UAAS,4CAAuCH,EAAa,WAAa,IAC1EI,QAAS,kBAAML,EAAMS,kBACrBF,aAAA,uBAA4BP,EAAMQ,UAF1C,oBAKA,wBAEEX,EAAWa,KAAI,SAACC,EAAGC,GAAJ,OAxBI,SAACC,EAAUD,GAClC,OAAQ,wBAAQR,UAAS,yBAAoBJ,EAAMa,WAAaA,EAAnB,6BAA6D,IAC1FR,QAAS,kBAAML,EAAMc,qBAAqBD,IAE1CN,aAAA,UAAeP,EAAMa,WAAaA,EAAW,WAAa,SAA1D,oCAA8Fb,EAAMQ,SAApG,eAAmHV,EAAiBe,EAAW,IAHvJ,SAIW,IAAIE,OAAOF,IAFTD,GAqBYI,CAAiBL,EAAGC,Y,OC9B1C,SAASK,EAAajB,GACnC,OACE,qBAAKI,UAAU,eAAf,SACE,uBAAQc,KAAK,WACLf,GAAE,gBAAWH,EAAMG,IACnBgB,QAASnB,EAAMmB,QACfC,SAAUpB,EAAMqB,iBAChBd,aAAA,UAAeP,EAAMmB,QAAU,aAAe,WAA9C,kBAAkEnB,EAAMQ,SAAxE,S,aCPC,SAASc,EAAgBtB,GAAQ,IACpCuB,EAAkDvB,EAAlDuB,MAAOH,EAA2CpB,EAA3CoB,SAAUI,EAAiCxB,EAAjCwB,UAAWC,EAAsBzB,EAAtByB,SAAaC,EADN,YACe1B,EADf,+CAEf2B,mBAASJ,EAAMK,QAFA,mBAEpCC,EAFoC,KAE5BC,EAF4B,KAGrCC,EAAMC,iBAAO,MAEnBC,qBAAU,WACR,IAAMC,EAAQH,EAAII,QACdD,GAAOA,EAAME,kBAAkBP,EAAQA,GAC3CL,EAAUO,KACT,CAACP,EAAWO,EAAKF,EAAQN,IAE5B,IAAMc,EAAe,SAACC,GACpBR,EAAUQ,EAAEC,OAAOC,gBACnBpB,GAAYA,EAASkB,IAGvB,OAAOb,EACH,sCAAUM,IAAKA,EAAKR,MAAOA,EAAOH,SAAUiB,GAAkBX,IAC9D,mCAAOK,IAAKA,EAAKR,MAAOA,EAAOH,SAAUiB,GAAkBX,I,OCJpD,SAASe,EAAczC,GACpC,OACE,qBAAKI,UAAU,YAAf,SAEIJ,EAAME,mBAAqBF,EAAMG,GAC/B,uBAAOA,GAAE,gBAAWH,EAAMG,IAAMC,UAAWJ,EAAM0C,aAAe1C,EAAM2C,cAAgB,gBAAkB,GAAxG,SAEI3C,EAAM4C,iBAAmB5C,EAAMG,GAC7BH,EAAMQ,UAnBHqC,EAoBO7C,EAAMQ,SAnBvBqC,EAAKjB,OAHU,GAGiBiB,EAAKC,MAAM,EAH5B,IAGkD,SAAMD,KAsBxE,cAACvB,EAAD,CACEG,UAAU,EACVF,MAAOvB,EAAMQ,SACbY,SAAU,SAAAkB,GAAC,OAAItC,EAAM+C,gBAAgB/C,EAAMG,GAAI,WAtBzD,SAAqB0C,GACnB,MAA+B,IAAxBA,EAAKG,QAAQ,OAClBH,EAAOA,EAAKI,QAAQ,KAAM,IAE5B,OAAOJ,EAkB4DK,CAAYZ,EAAEC,OAAOhB,SAChF4B,QAAS,SAAAb,GAAoB,UAAVA,EAAEc,MAAkBd,EAAEe,iBAAkBrD,EAAMsD,oBAAoB,QACrF9B,UAAW,SAACO,GAAD,OAAS/B,EAAMwB,UAAUO,IACpCwB,OAAQvD,EAAMwD,mBACdjD,aAAW,qBA9BrB,IAAmBsC,E,OCHJ,SAASY,EAAazD,GACnC,IAAM0D,EAAa1D,EAAM2D,aAAe3D,EAAMG,GAE9C,OACE,wBAAQC,UAAU,cAAcC,QAAS,kBAAML,EAAM4D,mBAAmB5D,EAAMG,KAAKI,aAAA,UAAemD,EAAa,OAAS,OAArC,iBAAnF,SACE,qBAAMtD,UAAS,uBAAkBsD,EAAc1D,EAAM6D,MAAN,gBAAuB7D,EAAM6D,MAA7B,OAA0C,WAAc,IAAvG,SACE,qBAAKzD,UAAS,uBAAkBsD,EAAa,UAAY,IAAzD,wB,WCDF5D,EAAmB,CAAC,MAAO,SAAU,QAE5B,SAASgE,EAAS9D,GAAQ,IAYba,EAZY,EACIc,oBAAS,GADb,mBAC/BgB,EAD+B,KAChBoB,EADgB,KAElCC,EAAYhC,iBAAO,MA2BvB,SAASvB,IACPsD,GAAiB,GACjBE,YAAW,kBAAMjE,EAAMkE,WAAWlE,EAAMG,MA3BZ,KA4C9B,OA1CA8B,qBAAU,WACJ+B,EAAU7B,SAAWnC,EAAME,mBAAqBF,EAAMG,IACxD6D,EAAU7B,QAAQgC,UAEnB,CAACnE,EAAME,iBAAkBF,EAAMG,KAuChC,qCACE,qBAAKC,UAAS,8CAAyCuC,EAAgB,YAAc,IAArF,UAtCsB9B,EAuCFb,EAAMa,SAtCrB,qBACGT,UAAS,yCAAoCS,GAC7CN,aAAA,gBAAqBP,EAAMQ,SAA3B,iBAAyD,IAAbK,EAAiB,KAAOf,EAAiBe,EAAW,GAAhG,kBAsCR,sBAAKT,UAAS,wCAAmCuC,EAAgB,YAAc,GAAjE,YAAuE3C,EAAM4C,iBAAmB5C,EAAMG,GAAK,cAAgB,IAAzI,UACI,cAAC,EAAD,CAAcA,GAAIH,EAAMG,GAAIgB,QAASnB,EAAM0C,YAAarB,iBApBhE,SAA0BiB,GACxByB,GAAiB,GACjB,IAAI5C,EAAUmB,EAAEC,OAAOpB,QACvB8C,YAAW,kBAAMjE,EAAM+C,gBAAgB/C,EAAMG,GAAI,cAAegB,KAjCpC,MAkDsEX,SAAUR,EAAMQ,WAC5G,cAAC,EAAD,2BACMR,GADN,IAEEgE,UAAWA,EACXR,mBApCV,WACExD,EAAMsD,oBAAoB,MACrBtD,EAAMQ,UACTC,KAkCMkC,cAAeA,EACfnB,UAAW,SAAAO,GAAQiC,EAAYjC,OAE9B/B,EAAM0C,aACL,cAAC,EAAD,CAAcvC,GAAIH,EAAMG,GACVwD,WAAY3D,EAAM4C,eAClBgB,mBAAoB5D,EAAM4D,mBAC1BC,MAAO7D,EAAM6D,QAG7B7D,EAAM4C,iBAAmB5C,EAAMG,IAC7B,cAAC,EAAD,CACEU,SAAUb,EAAMa,SAChBL,SAAUR,EAAMQ,SAChBL,GAAIH,EAAMG,GACVD,iBAAkBF,EAAME,iBACxBY,qBAnCd,SAA8BD,GACxBb,EAAMa,WAAaA,EACrBb,EAAM+C,gBAAgB/C,EAAMG,GAAI,WAAY,GAE5CH,EAAM+C,gBAAgB/C,EAAMG,GAAI,WAAYU,IAgClCP,kBA1Dd,WACEN,EAAMsD,oBAAoBtD,EAAMG,KA0DpBM,eAAgBA,U,OCnFjB,SAAS2D,EAASpE,GAE/B,OACE,qBAAKI,UAAU,cAAf,SAEIJ,EAAMqE,MAAM3D,KAAI,SAAA4D,GAAQ,OACtB,wBAAC,EAAD,2BAAcA,GAAd,IACMlB,IAAKkB,EAASnE,GACdyC,eAAgB5C,EAAM4C,eACtBgB,mBAAoB5D,EAAMuE,qBAC1BxB,gBAAiB/C,EAAM+C,gBACvBmB,WAAYlE,EAAMkE,WAClBZ,oBAAqBtD,EAAMsD,oBAC3BpD,iBAAkBF,EAAME,iBACxB2D,MAAO7D,EAAM6D,c,OCbd,SAASW,EAAiBxE,GAAQ,IAAD,EACI2B,oBAAS,GADb,mBACvC8C,EADuC,KACpBC,EADoB,KAQ9C,OACE,sBAAKtE,UAAS,oCAA+BqE,EAAoB,YAAc,IAA/E,UACE,qBAAKrE,UAAU,uBAAf,SACE,2CAEE,wBAAQA,UAAU,iBAAiBC,QAV3C,WACEqE,GAAqB,GACrBT,YAAW,kBAAMjE,EAAM2E,oBAAmB,MAQqBpE,aAAA,yDAA8DP,EAAMqE,MAAM3D,KAAI,SAAAkE,GAAI,OAAIA,EAAKpE,YAAUqE,QAA9J,wBAGJ,cAAC,EAAD,CAAUR,MAAOrE,EAAMqE,MACrBtB,gBAAiB/C,EAAM+C,gBACvBmB,WAAYlE,EAAMkE,gB,OCpBX,SAASY,EAAQ9E,GAC9B,OACE,wBAAQI,UAAS,kBAAaJ,EAAM+E,SAAW,gBAAkB,cAAhD,YAAiE/E,EAAM6D,MAAN,UAAiB7D,EAAM6D,OAAU,IAC3GxD,QAAS,kBAAML,EAAMgF,kBAAkBC,SAAUjF,EAAMC,WACvDM,aAAYP,EAAMyB,SAF1B,SAGGzB,EAAM+E,SAAN,YAAsB/E,EAAMyB,UAAa,M,OCLjC,SAASyD,EAAelF,GACrC,OAAO,wBAAQoB,SAAU,SAAAkB,GAAC,OAAItC,EAAMmF,iBAAiB7C,EAAEC,OAAOhB,QAAQnB,UAAU,iBAAzE,SAEHJ,EAAMoF,QAAQ1E,KAAI,WAA4B2E,GAA5B,uBAAEC,EAAF,KAAeC,EAAf,YAChB,wBAAgBhE,MAAO+D,EAAvB,SAAqCC,GAAxBF,Q,OCJN,SAASG,EAAaxF,GACnC,OACE,sBAAKI,UAAU,UAAf,UACE,mDACCJ,EAAMyF,MAAM/E,KAAI,SAAAgF,GAAI,OACnB,wBAEErF,QAAS,kBAAML,EAAM2F,iBAAiBD,EAAKvF,KAC3CC,UAAS,qBAAgBJ,EAAM4F,gBAAkBF,EAAKvF,GAAMuF,EAAKG,WAAL,gBAA2BH,EAAKG,WAAhC,OAAkD,WAAc,IAC5HtF,aAAA,0BAA+BmF,EAAKI,UAJtC,SAKI,sBAAM1F,UAAWJ,EAAM4F,gBAAkBF,EAAKvF,GAAK,OAAS,GAA5D,SAAiEuF,EAAKI,YAJnEJ,EAAKvF,U,OCNL,SAAS4F,EAAS/F,GAC/B,OACE,qBAAKI,UAAS,mBAAcJ,EAAMgG,MAAQ,YAAc,IAAxD,SACGhG,EAAMgG,MAAN,wCACoChG,EAAMgG,OACvC,e,OCJK,SAASC,EAAajG,GAAQ,IAAD,EACN2B,mBAAS,IADH,mBACnCuE,EADmC,KACvBC,EADuB,KAGpCC,EAAuB,SAACC,GAC5BrG,EAAMsG,oBAAoBtG,EAAM4F,cAAe,aAAcS,GAC7DrG,EAAMsG,oBAAoBtG,EAAM4F,cAAe,SAAUS,IAGrDE,EAA0B,SAACF,EAAO9E,GACxB,UAAVA,EACFvB,EAAMwG,eAAexG,EAAM4F,cAAe,SAAUS,GACjC,UAAV9E,GACTvB,EAAMsG,oBAAoBtG,EAAM4F,cAAe,SAAUS,IAS7D,OACE,qCACA,qBAAKjG,UAAU,gBACf,sBAAKA,UAAU,wBAAf,UACE,wBAAQC,QAASL,EAAMyG,aAAcrG,UAAU,aAA/C,kBACA,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,qBAAf,qBAGA,sBAAKA,UAAU,iBAAf,UACGJ,EAAM0G,OAAOC,SAAS3G,EAAM4G,KAAKP,QAChC,uBAAMQ,SAAU,SAACvE,GAAD,OAAOA,EAAEe,kBAAkBjD,UAAU,WAArD,UACE,uBAAQgB,SAAU,SAAAkB,GAAC,OAAI6D,EAAc7D,EAAEC,OAAOhB,QACtCuF,YAAY,kBACZvF,MAAO2E,EACP9F,UAAU,gBAClB,wBAAQC,QAAS,kBApB3BL,EAAMwG,eAAexG,EAAM4F,cAAe,qBAAsBM,QAChEC,EAAc,KAoBI/F,UAAS,6BAAwBJ,EAAM6F,WAA9B,OADjB,uBAIJ,sBAAKzF,UAAU,iBAAf,UACE,qBAAKA,UAAU,YAAf,0BAGA,sBAAKA,UAAU,mBAAf,WACIJ,EAAM+E,UACN,sBAAK3E,UAAU,iBAAf,UACE,8BAAK,wCACL,8BAAK,iDAIPJ,EAAM+G,aAAarG,KAAI,SAAC2F,EAAOhB,GAAR,OACrBrF,EAAM+E,SACF,sBAAK3E,UAAU,6BAAf,UACE,qBAAKA,UAAU,iBAAf,SACGiG,IAEH,qBAAKjG,UAAU,oBAAf,SACGJ,EAAMgH,QAAUX,GACf,qCACE,qBAAKjG,UAAU,mCAAf,SACE,yBACEgB,SAAU,SAAAkB,GAAC,OAAIiE,EAAwBF,EAAO/D,EAAEC,OAAOhB,QACvDnB,UAAU,eACVmB,MAAOvB,EAAM0G,OAAOC,SAASN,GAAS,QAAU,QAChDpB,UAAWjF,EAAM0G,OAAOC,SAAS3G,EAAM4G,KAAKP,OAJ9C,UAKE,2CACA,gDAIFrG,EAAM0G,OAAOC,SAAS3G,EAAM4G,KAAKP,QACjC,qBAAKjG,UAAU,mCAAf,SACE,wBAAQC,QAAS,kBAAM+F,EAAqBC,IAAQjG,UAAU,eAA9D,8BAOZ,sBAAaA,UAAU,iBAAvB,UACA,gCACE,qBAAKA,UAAU,cAAf,SAA8BiG,IADhC,IAC8CrG,EAAMgH,QAAUX,GAAS,sBAAMjG,UAAU,YAAhB,wBAGrEJ,EAAMgH,QAAUX,GACd,qCACE,qBAAKjG,UAAU,wBAAf,SACE,yBACEgB,SAAU,SAAAkB,GAAC,OAAIiE,EAAwBF,EAAO/D,EAAEC,OAAOhB,QACvDnB,UAAU,eACVmB,MAAOvB,EAAM0G,OAAOC,SAASN,GAAS,QAAU,QAChDpB,UAAWjF,EAAM0G,OAAOC,SAAS3G,EAAM4G,KAAKP,OAJ9C,UAKE,2CACA,gDAIFrG,EAAM0G,OAAOC,SAAS3G,EAAM4G,KAAKP,QACjC,qBAAKjG,UAAU,wBAAf,SACE,wBAAQC,QAAS,kBAAM+F,EAAqBC,IAAQjG,UAAU,eAA9D,2BApBAiF,YA8BtB,qBAAKjF,UAAU,iBAAf,SAEIJ,EAAMiH,mBAAmBrF,OAAS,GAAK,qCACrC,qBAAKxB,UAAU,YAAf,6BAEEJ,EAAMiH,mBAAmBvG,KAAI,SAAC2F,EAAOhB,GAAR,OAC3B,qBAAajF,UAAU,wBAAvB,SACE,sBAAKA,UAAU,cAAf,UACGiG,EACD,wBACEjG,UAAU,gBACVC,QAAS,kBAAML,EAAMsG,oBAAoBtG,EAAM4F,cAAe,qBAAsBS,IAFtF,sBAHMhB,uB,OCrHf,SAAS6B,EAAelH,GAAQ,IAAD,EACR2B,oBAAS,GADD,mBACrC+B,EADqC,KACzByD,EADyB,OAEcxF,oBAAS,GAFvB,mBAErCyF,EAFqC,KAEdC,EAFc,KAS5C,OACE,gCACE,sBAAKjH,UAAU,iBAAiBC,QAAS,kBAAM8G,GAAezD,IAA9D,UACE,sBAAKtD,UAAU,cAAf,UACE,qBAAKA,UAAU,gBAAf,2BAIGJ,EAAM4G,KAAKU,eAAiB,qBAAKlH,UAAU,eAAf,kBAGjC,qBAAKA,UAAS,yBAAoBsD,EAAa,UAAY,IAA3D,uBAGAA,GAAc,sBAAKtD,UAAU,eAAf,UACZ,qBAAKA,UAAU,YAAf,SACGJ,EAAM4G,KAAKP,SAGXrG,EAAM4G,KAAKU,eAAiB,8BAC3B,wBAAQjH,QAAS,kBAxB3BL,EAAM4G,KAAKW,6BACXF,GAAyB,IAuB+BjH,UAAU,+BAAxD,SACGgH,EAAwB,4BAA8B,8BAI7D,8BACE,wBAAQ/G,QAAS,kBAAML,EAAMwH,KAAKC,WAAWrH,UAAU,8BAAvD,8BC5BZ,IAAMsH,EAAkB,CAAC,CAAC,YAAa,UAAW,CAAC,YAAa,UAAW,CAAC,WAAY,QAAS,CAAC,WAAY,aAc9G,SAASC,EAAS3H,GAAQ,IAAD,EACqB2B,mBAAS,MAD9B,mBAChBiB,EADgB,KACAgF,EADA,OAEyBjG,oBAAS,GAFlC,mBAEhBkG,EAFgB,KAEEC,EAFF,KAGjBC,EAAc/H,EAAMyF,MAAMuC,MAAK,SAAAtC,GAAI,OAAIA,EAAKvF,KAAOH,EAAM4F,iBAM/D,SAASZ,IACP,IAAM7E,EAAKH,EAAMiI,UACjBjI,EAAMsD,oBAAoBnD,GAC1ByH,EAAkBzH,GAGpB,OACI,gCAEI0H,GAAoB,cAAC,EAAD,CAAcpB,aAAc,kBAAMqB,GAAoB,IACxCtB,eAAgBxG,EAAMwG,eACtBZ,cAAe5F,EAAM4F,cACrBmB,aAAcgB,EAAYG,WAC1BxB,OAAQqB,EAAYrB,OACpBJ,oBAAqBtG,EAAMsG,oBAC3BU,MAAOe,EAAYf,MACnBC,mBAAoBc,EAAYd,mBAChCL,KAAM5G,EAAM4G,KACZf,WAAYkC,EAAYlC,WACxBd,SAAU/E,EAAM+E,WAEpD,sBAAK3E,UAAU,iBAAf,UACE,wBAAUC,QAAS,kBAAML,EAAM2F,iBAAiB,OACtCvF,UAAU,aACVG,aAAW,oBAFrB,yBAKA,qBAAKH,UAAU,cAAf,SACE,oBAAIA,UAAW2H,EAAW,gBAAYA,EAAYlC,WAAxB,OAA0C,GAApE,SACGkC,EAAYjC,aAGjB,qBAAK1F,UAAU,6BAAf,SACE,cAAC,EAAD,CAAgBoH,KAAMxH,EAAMwH,KAAMZ,KAAM5G,EAAM4G,YAGlD,sBAAKxG,UAAU,cAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,aAAf,sBACA,cAAC,EAAD,CAAgBgF,QAASsC,EAAiBvC,iBAAkBnF,EAAMmI,gBAClE,wBAAQ/H,UAAU,gBAAgBC,QAAS,kBAAMyH,GAAoB,IAArE,sBAKA9H,EAAMoI,QAAU,cAAC,EAAD,IAChBpI,EAAMgG,MAAQ,cAAC,EAAD,CAAUA,MAAOhG,EAAMgG,QACrC,qCACmE,IAAhEhG,EAAMqI,KAAKC,QAAO,SAAAhE,GAAQ,OAAKA,EAAS5B,eAAad,QACpD,wBAAQxB,UAAU,qBAAqBC,QAAS2E,EAAhD,yBAIF,cAAC,EAAD,CAAUX,MAAOrE,EAAMqI,KAAKC,QAAO,SAAAhE,GAAQ,OAAKA,EAAS5B,eAC/CK,gBAAiB/C,EAAM+C,gBACvBmB,WAAYlE,EAAMkE,WAClBhE,iBAAkBF,EAAME,iBACxBoD,oBAAqBtD,EAAMsD,oBAC3BiB,qBA9DO,SAACpE,GAC5ByH,EAAkBhF,IAAmBzC,EAAK,KAAOA,IA8D7ByC,eAAgBA,EAChBiB,MAAOkE,EAAYlC,aAGoC,IAA/D7F,EAAMqI,KAAKC,QAAO,SAAAhE,GAAQ,OAAIA,EAAS5B,eAAad,OAChD,GACA,cAAC,EAAD,CACE+C,gBAAiB3E,EAAM2E,gBACvBN,MAAOrE,EAAMqI,KAAKC,QAAO,SAAAhE,GAAQ,OAAIA,EAAS5B,eAC9CK,gBAAiB/C,EAAM+C,gBACvBmB,WAAYlE,EAAMkE,mBAKhC,cAAC,EAAD,CACEjE,aAAuC,OAA3BD,EAAME,mBAA6BF,EAAMoI,SACrDpD,eAAgBA,EAChBD,SAAU/E,EAAM+E,SAChBtD,SAAU,WACVoC,MAAK,gBAAWkE,EAAYlC,WAAvB,YAKA0C,MAzGf,SAAkBvI,GAChB,OAAOA,EAAMwI,cACX,sBAAKpI,UAAU,iBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAcqF,MAAOzF,EAAMyF,MAAOE,iBAAkB3F,EAAM2F,iBAAkBC,cAAe5F,EAAM4F,kBAEnG,8BACE,cAAC+B,EAAD,eAAc3H,SAET,cAAC2H,EAAD,eAAc3H,K,QCfZ,SAASyI,EAAazI,GAAQ,IAAD,EACN2B,mBAAS,MADH,mBACnC+G,EADmC,KACvBC,EADuB,OAEMhH,mBAAS,MAFf,mBAEnCzB,EAFmC,KAEjBoD,EAFiB,OAGN3B,mBAAS,WAHH,mBAGnCiH,EAHmC,KAGvBT,EAHuB,KAIpCU,EAAY7I,EAAM8I,GAAGC,WAAW/I,EAAMgJ,gBAAgBC,IAAIjJ,EAAM4F,eAAemD,WAAW,SAJtD,EAKSG,YAAcL,GALvB,mBAKnCM,EALmC,KAKnBC,EALmB,KAKLC,EALK,KAMpCtE,EAAWuE,wBAAc,CAACC,SAAU,MACpCf,EAAgBc,wBAAc,CAACE,SAAU,MAE3CH,GACFrJ,EAAM2F,iBAAiB,MAGzB,IAAM8D,EAAgB,CACpB5I,SAAU,SAAC6I,EAAGC,GAAJ,OAAUC,EAAOD,GAAP,SAAwBC,EAAOF,GAAP,UAC5ClJ,SAAU,SAACkJ,EAAGC,GAAJ,OAAUC,EAAOF,GAAP,SAAsBG,cAAgBD,EAAOD,GAAP,SAAsBE,eAAiB,EAAI,GACrGC,UAAW,SAACJ,EAAGC,GAAJ,OAAUC,EAAOF,GAAP,QAAuBE,EAAOD,GAAP,QAAuB,GAAK,GACxEI,UAAW,SAACL,EAAGC,GAAJ,OAAUC,EAAOF,GAAP,QAAuBE,EAAOD,GAAP,SAAwB,EAAI,IAG1E1H,qBAAU,WACHmH,GAAiBC,GAElBV,EADEzI,EAEAiJ,EAAea,KAAKtJ,KAAI,SAAAuI,GAAG,OAAIA,EAAIZ,UAAQL,MAAK,SAAApD,GAAI,OAAIA,EAAKzE,KAAOD,KAGxD,QAIjB,CAACA,EAAkBkJ,EAAcC,EAAaF,GAAkBA,EAAea,KAAKpI,SAEvF,IAAMgI,EAAS,SAACK,GACd,OAAOvB,GAAcuB,EAAQ9J,KAAOuI,EAAWvI,GAAKuI,EAAauB,GAQ7D/F,EAAa,SAAC/D,GACH0I,EAAUI,IAAI9I,GACtB+J,UAyBT,OAAQb,GACD,cAAC,EAAD,2BAAerJ,GAAf,IACW+C,gBAlCM,SAAC5C,EAAIgK,EAAO5I,GACnBsH,EAAUI,IAAI9I,GACtBiK,OAAP,eAAgBD,EAAQ5I,KAiCR2C,WAAYA,EACZS,gBA1BM,kBACxBwE,EAAea,KAAKtJ,KAAI,SAAAuI,GAAG,OAAIA,EAAIZ,UAAQC,QAAO,SAAA1D,GAAI,OAAIA,EAAKlC,eAAa2H,SAAQ,SAAAzF,GAAI,OAAIV,EAAWU,EAAKzE,QA0B1FgI,cAAeA,EACfF,QAzBF,WACd,IAAMqC,EAASC,cASf,OARe1B,EAAUI,IAAIqB,GACtBE,IAAI,CACThK,SAAU,GACVkC,aAAa,EACbvC,GAAImK,EACJG,QAASC,IAASC,SAASC,YAAYC,UACvChK,SAAU,IAELyJ,GAgBSjC,KAZTe,EACH,KACAD,EAAea,KAAKtJ,KAAI,SAAAuI,GAAG,OAAIA,EAAIZ,UAAQyC,KAAKrB,EAAcb,IAWlDR,QAASgB,EACTpD,MAAOqD,EACPnJ,iBAAkBA,EAClBoD,oBAAqBA,EACrByB,SAAUA,EACVyD,cAAeA,EACf/C,MAAOzF,EAAMyF,MACbe,eAAgBxG,EAAMwG,kB,aCrFpCuE,G,OAAgB,CACpB,UAAW,OACX,UAAW,MACX,UAAW,SACX,UAAW,QACX,UAAW,UAEPC,EAAgBC,OAAOC,YAAYD,OAAOE,QAAQJ,GAAerK,KAAI,mCAAE0K,EAAF,WAAY,CAAZ,KAAgBA,OAE5E,SAASC,EAASrL,GAC/B,IAAIgE,EAAYhC,iBAAO,MADe,EAEYL,oBAAS,GAFrB,mBAE/B8C,EAF+B,KAEZC,EAFY,OAGQ/C,oBAAS,GAHjB,mBAG/B2J,EAH+B,KAGdC,EAHc,KAIhCC,EAAqBxL,EAAMyL,cACH,UACAzL,EAAMkI,WAAWvB,SAAS3G,EAAM4G,KAAKP,OAClCrG,EAAMgH,QAAUhH,EAAM4G,KAAKP,MACxB,UACA,aACJ,eAEhCpE,qBAAU,WACJ+B,EAAU7B,SAAWnC,EAAM0L,mBAAqB1L,EAAMG,IACxD6D,EAAU7B,QAAQgC,UAEnB,CAACnE,EAAM0L,iBAAkB1L,EAAMG,KAElC,IAAMwL,EAAiB,WACrB3L,EAAM4L,oBAAoB,MACrB5L,EAAM8F,UACTrF,KAIEA,EAAiB,WACrBiE,GAAqB,GACrBT,YAAW,kBAAMjE,EAAM6L,WAAW7L,EAAMG,MArCd,MAwC5B,OAAO,sBAAKC,UAAS,wCAAmCqE,EAAoB,YAAc,GAArE,YAA2EzE,EAAMyL,cAAgB,eAAiB,GAAlH,YAAwHzL,EAAMgH,QAAUhH,EAAM4G,KAAKP,MAAQ,WAAa,IAAtL,UACL,sBAAKjG,UAAU,oBAAf,UACE,wBAAUC,QAAS,kBAAMkL,GAAoBD,IACnClL,UAAS,wBAAyC,YAArBJ,EAAM6F,WAAP,gBAA4C7F,EAAM6F,WAAlD,OAAoE,IAChGZ,UAAWjF,EAAM0G,OAAOC,SAAS3G,EAAM4G,KAAKP,OAFtD,SAGE,qBAAKjG,UAAS,wBAAmBkL,EAAkB,UAAY,GAAjD,YAAwDtL,EAAM0G,OAAOC,SAAS3G,EAAM4G,KAAKP,OAA6B,GAApB,mBAA0B9F,aAAA,uCAA4CP,EAAM8F,UAA5L,sBAKAwF,GACA,qBAAKlL,UAAU,iBAAf,SACE,cAAC,IAAD,CACEyD,MAAOmH,EAAchL,EAAM6F,YAC3BiG,iBAAkB,SAAAjI,GAAU7D,EAAM+L,gBAAgB/L,EAAMG,GAAI,aAAc4K,EAAclH,EAAMmI,IAAInC,gBAAiB0B,GAAmB,IACtIU,OAAQhB,OAAOiB,KAAKnB,GACpB3K,UAAU,QACV+L,SAAS,cAKbnM,EAAM0L,mBAAqB1L,EAAMG,GAC3B,cAACmB,EAAD,CACEC,MAAOvB,EAAM8F,SACb1E,SAAU,SAAAkB,GAAC,OAAItC,EAAM+L,gBAAgB/L,EAAMG,GAAI,WAAYmC,EAAEC,OAAOhB,QACpE4B,QAAS,SAAAb,GAAoB,UAAVA,EAAEc,KAAiBuI,KACtCpI,OAAQ,kBAAMoI,KACdnK,UAAW,SAACO,GAASiC,EAAYjC,GACjC3B,UAAS,wBAAmBoL,GAC5BjL,aAAW,mBACf,qBAAKH,UAAS,mBAAcoL,GAAsBnL,QAAS,kBAAOL,EAAMyL,eAAiBzL,EAAM2F,iBAAiB3F,EAAMG,KAAtH,SACGH,EAAM8F,WAIb9F,EAAMyL,cACF,mCACE,sBAAKrL,UAAU,sBAAf,UACE,wBAAQA,UAAU,kCAAkCC,QAAS,kBAAML,EAAMoM,oBAAzE,oBACA,wBAAQhM,UAAU,kCAAkCC,QAAS,kBAAML,EAAMqM,oBAAzE,yBAGJ,qCACGrM,EAAMgH,QAAUhH,EAAM4G,KAAKP,MAC1B,wBACEhG,QAAS,kBAAMI,KACfL,UAAU,2CACVG,aAAA,uBAA4BP,EAAM8F,UAHpC,oBAGkE,wBAEnE9F,EAAM0G,OAAOC,SAAS3G,EAAM4G,KAAKP,OAChC,wBACEhG,QAAS,kBAAML,EAAM4L,oBAAoB5L,EAAMG,KAC/CC,UAAU,yCACVG,aAAA,0BAA+BP,EAAM8F,UAHvC,kBAGmE,wBAEpE9F,EAAMkI,WAAWvB,SAAS3G,EAAM4G,KAAKP,OACpC,wBACEhG,QAAS,kBAAML,EAAM2F,iBAAiB3F,EAAMG,KAC5CC,UAAU,8BACVG,aAAA,8BAAmCP,EAAM8F,UAH3C,oBAGoE,2BAK5E9F,EAAMgH,QAAUhH,EAAM4G,KAAKP,OAAS,qBAAKjG,UAAU,qBAAf,SACjCJ,EAAMgH,W,OCvGF,SAASsF,EAAWtM,GAAQ,IAAD,EACQ2B,mBAAS,MADjB,mBACjC+J,EADiC,KACfE,EADe,KAElC7G,EAAWuE,wBAAc,CAACC,SAAU,MAEpCgD,EAAkB,WACtBX,EAAoB5L,EAAMwM,YAGtBC,EAAoB,SAACtM,GACzBH,EAAMsG,oBAAoBnG,EAAI,qBAAsBH,EAAM4G,KAAKP,QAQjE,OAAO,qCACH,sBAAKjG,UAAU,YAAf,UACE,qBAAKA,UAAU,aAAf,SACE,6BACE,sBAAMA,UAAU,OAAhB,sBAGJ,qBAAKA,UAAU,qBAAf,SACE,cAAC,EAAD,CAAgBoH,KAAMxH,EAAMwH,KAAMZ,KAAM5G,EAAM4G,YAGlD,qBAAKxG,UAAU,gBAAf,SACIJ,EAAMoI,QAAU,cAAC,EAAD,IAChBpI,EAAMgG,MAAQ,cAAC,EAAD,CAAUA,MAAOhG,EAAMgG,QACnC,qCAC0B,IAAvBhG,EAAMyF,MAAM7D,QACX,wBAAQxB,UAAU,qBAAqBC,QAASkM,EAAhD,iCAGAvM,EAAMyF,MAAM/E,KAAI,SAAAgF,GAAI,OAAI,wBAAC,EAAD,uCACM1F,GACA0F,GAFN,IAGEtC,IAAKsC,EAAKvF,GACVuL,iBAAkBA,EAClBE,oBAAqBA,aAMzB,IAA9B5L,EAAM0M,aAAa9K,SAEhB5B,EAAM4G,KAAKU,cAQR,mCACE,sBAAKlH,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,iCAIE,mCAEIJ,EAAM0M,aAAahM,KAAI,SAAAgF,GAAI,OAAI,wBAAC,EAAD,uCACD1F,GACA0F,GAFC,IAGLtC,IAAKsC,EAAKvF,GACVuL,iBAAkBA,EAClBE,oBAAqBA,EACrBH,eAAa,EACbW,iBAAkB,kBA5DxCjM,EA4D+DuF,EAAKvF,GA3D5FH,EAAMwG,eAAerG,EAAI,aAAcH,EAAM4G,KAAKP,YAClDoG,EAAkBtM,GAFK,IAACA,GA6DsBkM,iBAAkB,kBAAMI,EAAkB/G,EAAKvF,kBAvBnF,qBAAKC,UAAU,uBAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,uFACA,uBAFF,8DA8BV,cAAC,EAAD,CACE2E,SAAUA,EACVC,eAAgBuH,EAChBtM,WAAYyL,EACZjK,SAAU,gB,WCrFZkL,EAAkB,aAET,SAASC,EAAI5M,GAC1B,IAAM6M,EAAe7M,EAAM8I,GAAGC,WAAW4D,GACnCG,EAAYD,EAAaE,MAAM,aAAc,iBAAkB/M,EAAM4G,KAAKP,OAC1E2G,EAAmBH,EAAaE,MAAM,qBAAsB,iBAAkB/M,EAAM4G,KAAKP,OAH9D,EAIkB6C,YAAc4D,GAJhC,mBAI1BG,EAJ0B,KAIVC,EAJU,KAIIC,EAJJ,OAKyBjE,YAAc8D,GALvC,mBAK1BI,EAL0B,KAKPC,EALO,KAKSC,EALT,OAMS3L,mBAAS,MANlB,mBAM1BiE,EAN0B,KAMXD,EANW,KAkC3Ba,EAAiB,SAACrG,EAAIgK,EAAO5I,GACjC,IAAMgM,EAASV,EAAa5D,IAAI9I,GAChCoN,EAAOC,MAAMC,MAAK,SAAAC,GAAY,OAC3BA,EAAarF,OAAO8B,GAAOnC,MAAK,SAAA2F,GAAM,OAAIpM,IAAUoM,MAAWJ,EAAOnD,OAAP,eAAgBD,EAAhB,sBAA4BuD,EAAarF,OAAO8B,IAAhD,CAAwD5I,UAItH+E,EAAsB,SAACnG,EAAIgK,EAAO5I,GACtC,IAAMgM,EAASV,EAAa5D,IAAI9I,GAChCoN,EAAOC,MAAMC,MAAK,SAAAC,GAAY,OAC5BH,EAAOnD,OAAP,eAAgBD,EAAQuD,EAAarF,OAAO8B,GAAO7B,QAAO,SAAAsF,GAAG,OAAIA,IAAQrM,WAI7E,OAAOqE,EAAiB,cAAC6C,EAAD,CAAc7C,cAAeA,EACfH,OAAQyH,IAAiBC,GAAcF,EAAejD,KAAKtJ,KAAI,SAAAuI,GAAG,OAAIA,EAAIZ,UAC1ES,GAAI9I,EAAM8I,GACVE,eAAgB2D,EAChBhH,iBAAkBA,EAClBa,eAAgBA,EAChBF,oBAAqBA,EACrBM,KAAM5G,EAAM4G,KACZY,KAAMxH,EAAMwH,OAC1B,cAAC,EAAD,CAAY/B,MAAQyH,GAAgBC,EAAc,GAAKF,EAAejD,KAAKtJ,KAAI,SAAAuI,GAAG,OAAIA,EAAIZ,UAC9EqE,aAAeW,GAAkBC,EAAgB,GAAKF,EAAkBpD,KAAKtJ,KAAI,SAAAuI,GAAG,OAAIA,EAAIZ,UAC5F1C,iBAAkBA,EAClBkG,WApDjB,SAAC1L,GACH0M,EAAa5D,IAAI9I,GACzB+J,UAmD2BsC,QAhDpB,WACd,IAAMlC,EAASC,cAYf,OAXesC,EAAa5D,IAAIqB,GACzBE,IAAI,CACT1E,SAAU,GACV3F,GAAImK,EACJG,QAASC,IAASC,SAASC,YAAYC,UACvChF,WAAY,OACZmB,MAAOhH,EAAM4G,KAAKP,MAClBK,OAAQ,CAAC1G,EAAM4G,KAAKP,OACpB6B,WAAY,CAAClI,EAAM4G,KAAKP,OACxBY,mBAAoB,KAEfqD,GAoC2ByB,gBAjCZ,SAAC5L,EAAIgK,EAAO5I,GACnBsL,EAAa5D,IAAI9I,GACzBiK,OAAP,eAAgBD,EAAQ5I,KAgCU6G,QAAS8E,EACTlH,MAAOmH,EACPvG,KAAM5G,EAAM4G,KACZY,KAAMxH,EAAMwH,KACZhB,eAAgBA,EAChBF,oBAAqBA,I,WCzErDuH,EAAiB,IAAInD,IAASlD,KAAKsG,mBAE1B,SAASC,EAAM/N,GAAQ,IAAD,EACT2B,mBAAS,IADA,mBAC5B0E,EAD4B,KACrB2H,EADqB,OAEHrM,mBAAS,IAFN,mBAE5BsM,EAF4B,KAElBC,EAFkB,KAG7BC,EAAoBC,YAA8BpO,EAAMwH,MAH3B,EAIkB,CAAC2G,EAAkB,GAAIA,EAAkB,GAAIA,EAAkB,IAA7GE,EAJ4B,KAIAjG,EAJA,KAISpC,EAJT,KAMnC,OACE,qCACE,qBAAK5F,UAAU,YAAf,oBAGA,uBACA,uBAAMyG,SAAU,SAACvE,GAAD,OAAOA,EAAEe,kBAAzB,UACE,uBAAO9B,MAAO8E,EAAOjF,SAAU,SAAAkB,GAAC,OAAI0L,EAAS1L,EAAEC,OAAOhB,QAAQuF,YAAY,QAAQ5F,KAAK,QAAQd,UAAU,gBACzG,uBAAOmB,MAAO0M,EAAU7M,SAAU,SAAAkB,GAAC,OAAI4L,EAAY5L,EAAEC,OAAOhB,QAAQuF,YAAY,WAAW5F,KAAK,WAAWd,UAAU,gBACrH,wBAAQc,KAAK,SAASb,QAAS,kBAAMgO,EAA2BhI,EAAO4H,IAAW7N,UAAU,eAA5F,yBAEAgI,GAAWpC,GAAS,qBAAK5F,UAAU,WAAf,SAED,uBAAf4F,EAAMsI,KACF,uCACe,wBAAftI,EAAMsI,KACF,6CACe,wBAAftI,EAAMsI,KACJ,2CACe,wBAAftI,EAAMsI,KACJ,8BACA,0CAIlB,uBACA,qBAAKlO,UAAU,kBAAf,SACE,yBAAQC,QAAS,kBAAML,EAAMwH,KAAK+G,gBAAgBV,IAAiBzN,UAAU,kBAA7E,UACE,qBAAMoO,IAAI,sHACJpO,UAAU,aACVqO,IAAI,gBAHZ,8BCrCO,SAASC,EAAO1O,GAAQ,IAAD,EACV2B,mBAAS,IADC,mBAC7B0E,EAD6B,KACtB2H,EADsB,OAEJrM,mBAAS,IAFL,mBAE7BsM,EAF6B,KAEnBC,EAFmB,OAGQvM,mBAAS,IAHjB,mBAG7BgN,EAH6B,KAGbC,EAHa,OAIgBjN,oBAAS,GAJzB,mBAI7BkN,EAJ6B,KAITC,EAJS,KAK9BX,EAAoBY,YAAkC/O,EAAMwH,MAL9B,EAMqB,CAAC2G,EAAkB,GAAIA,EAAkB,GAAIA,EAAkB,IAAjHa,EAN6B,KAMG5G,EANH,KAMYpC,EANZ,KAiBpC,OACE,qCACE,qBAAK5F,UAAU,YAAf,qBAGA,uBACA,uBAAMyG,SAAU,SAACvE,GAAD,OAAOA,EAAEe,kBAAzB,UACE,uBAAO9B,MAAO8E,EAAOjF,SAAU,SAAAkB,GAAC,OAAI0L,EAAS1L,EAAEC,OAAOhB,QAAQuF,YAAY,QAAQ5F,KAAK,QAAQd,UAAU,gBACzG,uBAAOmB,MAAO0M,EAAU7M,SAAU,SAAAkB,GAAC,OAAI4L,EAAY5L,EAAEC,OAAOhB,QAAQuF,YAAY,WAAW5F,KAAK,WAAWd,UAAU,gBACrH,uBAAOmB,MAAOoN,EAAgBvN,SAAU,SAAAkB,GAAC,OAAIsM,EAAkBtM,EAAEC,OAAOhB,QAAQuF,YAAY,kBAAkB5F,KAAK,WAAWd,UAAU,gBACxI,wBAAQA,UAAU,eAAec,KAAK,SAASb,QAAS,WAlBxD4N,IAAaU,EACfG,GAAsB,IAEtBA,GAAsB,GACtBE,EAA+B3I,EAAO4H,KAcpC,yBAEA7F,IAAYpC,GAAS6I,IACrB,qBAAKzO,UAAU,WAAf,SAEMyO,EACI,yBACe,uBAAf7I,EAAMsI,KACF,uCACe,wBAAftI,EAAMsI,KACF,6CACe,uBAAftI,EAAMsI,KACJ,+CACA,6C,OCtCb,SAASW,EAAoBjP,GAAQ,IAAD,EACf2B,oBAAS,GADM,mBAC1CuN,EAD0C,KAC/BC,EAD+B,KAEjD,OACE,qCACE,qBAAK/O,UAAU,SAAf,SACE,+BACE,sBAAMA,UAAU,OAAhB,kBADF,qBAIF,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,0BAAf,SAEI8O,EACI,cAAC,EAAD,CAAO1H,KAAMxH,EAAMwH,KAAM4H,WAAY,kBAAMD,GAAa,MACxD,cAACT,EAAD,CAAQlH,KAAMxH,EAAMwH,KAAM0H,UAAW,kBAAMC,GAAa,QAGhE,qBAAK/O,UAAU,uBAAuBC,QAAS,kBAAM8O,GAAcD,IAAnE,SAEIA,EACI,+DAAyB,2CACzB,iEAA2B,mD,OCpB5B,SAASG,EAAoBrP,GAAQ,IAAD,EACVsP,YAAatP,EAAMwH,MADT,mBAC1CZ,EAD0C,KACpC2I,EADoC,KACvBC,EADuB,KAGjD,QACID,GAAeC,IAAc,qBAAKpP,UAAU,oBAAf,SAC5BwG,EACG,cAAC,EAAD,CAAKkC,GAAI9I,EAAM8I,GAAItB,KAAMxH,EAAMwH,KAAMZ,KAAMA,IAC3C,cAAC,EAAD,CAAqBY,KAAMxH,EAAMwH,SCA3CkD,IAAS+E,cARc,CACrBC,OAAQ,0CACRC,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,8CAGT,IAAMjH,EAAK4B,IAASsF,YACdxI,EAAOkD,IAASlD,OAGpByI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAqBrH,GAAIA,EAAItB,KAAMA,MAErC4I,SAASC,eAAe,W","file":"static/js/main.7b73a9d8.chunk.js","sourcesContent":["import \"./TaskItemOptions.css\"\n\nconst PRIORITIES = [1, 2, 3];\nconst PRIORITY_TO_TEXT = [\"low\", \"medium\", \"high\"];\n\nexport default function TaskItemOptions(props) {\n  const inEditMode = props.taskInEditModeId === props.id;\n\n  const priorityToButton = (priority, index) => {\n    return  <button className={`priorityButton ${props.priority === priority ? `whiteText selectedPriority` : ''}`}\n                    onClick={() => props.handleChangePriority(priority)}\n                    key={index}\n                    aria-label={`${props.priority === priority ? \"deselect\" : \"select\"} priority level for task ${props.taskName} to ${PRIORITY_TO_TEXT[priority - 1]}`}>\n                      {'!'.repeat(priority)}\n            </button>\n  }\n\n  return <>\n    <div className=\"toDoLowerHalf\" />\n    <div className=\"toDoItemOptions\">\n      <button className={`editButton toDoItemActionButton ${ inEditMode ? 'grayText' : ''}`} \n              onClick={props.onClickEditButton}\n              aria-label={`edit task name: ${props.taskName}`}>\n                edit\n      </button>\n      <button className={`deleteButton toDoItemActionButton ${inEditMode ? 'grayText' : ''}`}\n              onClick={() => props.handleDeletion()}\n              aria-label={`delete task: ${props.taskName}`}>\n                delete\n      </button>\n      <div />\n      {\n        PRIORITIES.map((p, index) => priorityToButton(p, index))\n      }\n    </div>\n  </>\n}","import \"./TaskCheckbox.css\"\n\nexport default function ToDoCheckbox(props) {\n  return (\n    <div className=\"toDoCheckbox\">\n      <input  type=\"checkbox\" \n              id={`label-${props.id}`} \n              checked={props.checked} \n              onChange={props.handleCompletion}\n              aria-label={`${props.checked ? \"uncomplete\" : \"complete\"} task \"${props.taskName}\"`}/>\n    </div>\n  )\n}","import { useEffect, useRef, useState } from 'react';\n\nexport default function InputKeepCursor(props) {\n    const { value, onChange, returnRef, longText, ...rest } = props;\n    const [cursor, setCursor] = useState(value.length);\n    const ref = useRef(null);\n\n    useEffect(() => {\n      const input = ref.current;\n      if (input) input.setSelectionRange(cursor, cursor);\n      returnRef(ref);\n    }, [returnRef, ref, cursor, value]);\n\n    const handleChange = (e) => {\n      setCursor(e.target.selectionStart);\n      onChange && onChange(e);\n    };\n\n    return longText\n      ? <textarea ref={ref} value={value} onChange={handleChange} {...rest} />\n      : <input ref={ref} value={value} onChange={handleChange} {...rest} />;\n}","import InputKeepCursor from \"../InputKeepCursor\";\nimport \"./TaskTextLabel.css\"\n\nconst TEXT_CHAR_LIMIT = 80;\n\nfunction elideText(text) {\n  return text.length > TEXT_CHAR_LIMIT ? text.slice(0, TEXT_CHAR_LIMIT) + '…' : text;\n}\n\nfunction trimNewline(text) {\n  while (text.indexOf('\\n') !== -1) {\n    text = text.replace('\\n', '');\n  }\n  return text;\n}\n\nexport default function TaskTextLabel(props) {\n  return (\n    <div className=\"toDoLabel\">\n      {\n        props.taskInEditModeId !== props.id ?\n          <label id={`label-${props.id}`} className={props.isCompleted || props.shouldFadeOut ? 'strikethrough' : ''}>\n            {\n              props.expandedTaskId === props.id\n              ? props.taskName\n              : elideText(props.taskName)\n            }\n          </label> :\n        <InputKeepCursor\n          longText={true}\n          value={props.taskName} \n          onChange={e => props.setTaskProperty(props.id, 'taskName', trimNewline(e.target.value))}\n          onKeyUp={e => {if (e.key === 'Enter') {e.preventDefault(); props.setTaskInEditModeId(null);}}} \n          returnRef={(ref) => props.returnRef(ref)}\n          onBlur={props.deselectOnEditMode}\n          aria-label=\"edit task name\" />\n      }\n    </div>\n  )\n}","import \"./TaskExpander.css\"\n\nexport default function TaskExpander(props) {\n  const isExpanded = props.expandedId === props.id;\n\n  return (\n    <button className=\"toDoOptions\" onClick={() => props.expandTaskCallback(props.id)} aria-label={`${isExpanded ? 'hide' : 'show'} task options`}>\n      <div  className={`toDoDropdown ${isExpanded ? (props.color ? `color_${props.color}_bg` : 'selected') : ''}`}>\n        <div className={`optionsArrow ${isExpanded ? 'rotated' : ''}`}>\n          ➔\n        </div>\n      </div>\n    </button>\n  );\n}","import { useEffect, useRef, useState } from 'react';\nimport TaskItemOptions from './TaskItemOptions';\nimport TaskCheckbox from './TaskCheckbox';\nimport TaskTextLabel from './TaskTextLabel';\nimport TaskExpander from './TaskExpander';\nimport './TaskItem.css';\n\nconst PRIORITY_TO_TEXT = [\"low\", \"medium\", \"high\"];\n\nexport default function TaskItem(props) {\n  const [shouldFadeOut, setShouldFadeOut] = useState(false);\n  let textInput = useRef(null);\n\n  const DISAPPEAR_DURATION_MS = 500;\n\n  useEffect(() => {\n    if (textInput.current && props.taskInEditModeId === props.id) {\n      textInput.current.focus();\n    }\n  }, [props.taskInEditModeId, props.id]);\n\n  function priorityToMarker(priority) {\n    return <div \n              className={`priorityExclamationDiv priority${priority}`}\n              aria-label={`task \"${props.taskName}\" has ${priority === 0 ? \"no\" : PRIORITY_TO_TEXT[priority - 1]} priority`}></div>;\n  }\n\n  function onClickEditButton() {\n    props.setTaskInEditModeId(props.id);\n  }\n\n  function deselectOnEditMode() {\n    props.setTaskInEditModeId(null);\n    if (!props.taskName) {\n      handleDeletion();\n    }\n  }\n\n  function handleDeletion() {\n    setShouldFadeOut(true);\n    setTimeout(() => props.deleteTask(props.id), DISAPPEAR_DURATION_MS);\n  }\n\n  function handleCompletion(e) {\n    setShouldFadeOut(true);\n    let checked = e.target.checked;\n    setTimeout(() => props.setTaskProperty(props.id, 'isCompleted', checked), DISAPPEAR_DURATION_MS);\n  }\n\n  function handleChangePriority(priority) {\n    if (props.priority === priority) {\n      props.setTaskProperty(props.id, 'priority', 0);\n    } else {\n      props.setTaskProperty(props.id, 'priority', priority);\n    }\n  }\n\n  return (\n    <>\n      <div className={`priorityMarker supportsInvisibility ${shouldFadeOut ? 'invisible' : ''}`}>\n        {priorityToMarker(props.priority)}\n      </div>\n      <div className={`toDoItem supportsInvisibility ${shouldFadeOut ? 'invisible' : ''} ${props.expandedTaskId === props.id ? 'highlighted' : ''}`}>\n          <TaskCheckbox id={props.id} checked={props.isCompleted} handleCompletion={handleCompletion} taskName={props.taskName} />\n          <TaskTextLabel \n            {...props}\n            textInput={textInput}\n            deselectOnEditMode={deselectOnEditMode}\n            shouldFadeOut={shouldFadeOut}\n            returnRef={ref => {textInput = ref}} />\n          {\n            !props.isCompleted && \n              <TaskExpander id={props.id}\n                            expandedId={props.expandedTaskId}\n                            expandTaskCallback={props.expandTaskCallback}\n                            color={props.color} />\n          }\n          {\n            props.expandedTaskId === props.id &&\n              <TaskItemOptions\n                priority={props.priority}\n                taskName={props.taskName}\n                id={props.id}\n                taskInEditModeId={props.taskInEditModeId}\n                handleChangePriority={handleChangePriority}\n                onClickEditButton={onClickEditButton}\n                handleDeletion={handleDeletion} />\n          }\n      </div>\n    </>\n  )\n}","import TaskItem from './TaskItem';\nimport \"./TaskList.css\";\n\nexport default function TaskList(props) {\n\n  return (\n    <div className=\"taskListDiv\">\n      {\n        props.tasks.map(taskItem => \n          <TaskItem {...taskItem} \n                key={taskItem.id} \n                expandedTaskId={props.expandedTaskId}\n                expandTaskCallback={props.toggleExpandedTaskId}\n                setTaskProperty={props.setTaskProperty}\n                deleteTask={props.deleteTask}\n                setTaskInEditModeId={props.setTaskInEditModeId}\n                taskInEditModeId={props.taskInEditModeId}\n                color={props.color} />)\n      }\n    </div>\n  )\n}","import { useState } from 'react'\nimport './CompletedSection.css'\nimport TaskList from './TaskList'\n\nexport default function CompletedSection(props) {\n  const [startDisappearing, setstartDisappearing] = useState(false);\n\n  function handleClear() {\n    setstartDisappearing(true);\n    setTimeout(() => props.deleteCompleted(), 500);\n  }\n\n  return (\n    <div className={`completedSectionContainer ${startDisappearing ? 'invisible' : ''}`}>\n      <div className=\"completedItemsHeader\">\n        <h3>\n          completed\n          <button className=\"clearCompleted\" onClick={handleClear} aria-label={`delete completed tasks. tasks to be completed: ${props.tasks.map(task => task.taskName).join()}`}>clear</button>\n        </h3>\n      </div>\n      <TaskList tasks={props.tasks} \n        setTaskProperty={props.setTaskProperty} \n        deleteTask={props.deleteTask} />\n    </div>\n  )\n}","import './AddItem.css'\n\nexport default function AddItem(props) {\n  return (\n    <button className={`addItem ${props.isNarrow ? 'addItemNarrow' : 'addItemWide'} ${props.color ? `${props.color}` : ''}`} \n            onClick={() => props.addTaskAndEdit()} disabled={props.inEditMode}\n            aria-label={props.longText}>\n      {props.isNarrow ? `+ ${props.longText}` : \"+\"}\n    </button>\n  )\n}","import \"./OptionSelector.css\";\n\nexport default function OptionSelector(props) {\n  return <select onChange={e => props.onChangeCallback(e.target.value)} className=\"optionSelector\">\n    {\n      props.options.map(([optionValue, optionName], i) => \n        <option key={i} value={optionValue}>{optionName}</option>\n      )\n    }\n  </select>\n}","import \"./ListSideMenu.css\"\n\nexport default function ListSideMenu(props) {\n  return (\n    <div className=\"mainDiv\">\n      <h3>todo 🦑</h3>\n      {props.lists.map(list => \n        <button \n          key={list.id}\n          onClick={() => props.setCurrentListId(list.id)}\n          className={`listButton ${props.currentListId === list.id ? (list.colorTheme ? `color_${list.colorTheme}_bg` : 'selected') : ''}`}\n          aria-label={`Switch to list: ${list.listName}`}>\n            <span className={props.currentListId === list.id ? 'bold' : ''}>{list.listName}</span>\n        </button>\n      )}\n    </div>\n  )\n}","import \"./InfoCard.css\"\n\nexport default function InfoCard(props) {\n  return (\n    <div className={`infoText ${props.error ? 'errorText' : ''}`}>\n      {props.error \n        ? `an unexpected error occurred: ${props.error}` \n        : 'loading...'}\n    </div>\n  )\n}","import React, { useState } from 'react'\nimport \"./SharingPanel.css\";\n\nexport default function SharingPanel(props) {\n  const [emailInput, setEmailInput] = useState(\"\");\n\n  const revokeAllPermissions = (email) => {\n    props.removeFromListField(props.currentListId, \"sharedWith\", email);\n    props.removeFromListField(props.currentListId, \"admins\", email);\n  }\n\n  const handlePermissionsChange = (email, value) => {\n    if (value === 'admin') {\n      props.addToListField(props.currentListId, \"admins\", email);\n    } else if (value === 'basic') {\n      props.removeFromListField(props.currentListId, \"admins\", email);\n    }\n  }\n\n  const handleOnInvite = () => {\n    props.addToListField(props.currentListId, \"pendingInvitations\", emailInput);\n    setEmailInput(\"\");\n  }\n\n  return (\n    <>\n    <div className=\"smokeScreen\" />\n    <div className=\"sharingPanelContainer\">\n      <button onClick={props.onClosePanel} className=\"exitButton\">×</button>\n      <div className=\"sharingPanelBody\">\n        <div className=\"sharingPanelHeader\">\n          sharing\n        </div>\n        <div className=\"sharingContent\">\n          {props.admins.includes(props.user.email) &&\n            <form onSubmit={(e) => e.preventDefault()} className=\"shareRow\">\n              <input  onChange={e => setEmailInput(e.target.value)} \n                      placeholder=\"invite by email\" \n                      value={emailInput} \n                      className=\"inviteInput\"/>\n              <button onClick={() => handleOnInvite()}\n                      className={`inviteButton color_${props.colorTheme}_bg`}>invite</button>\n            </form>\n          }\n          <div className=\"innerContainer\">\n            <div className=\"subheader\">\n              contributors\n            </div>\n            <div className=\"permissionsTable\">\n              {!props.isNarrow && \n                <div className=\"permissionsRow\">\n                  <div><u>email</u></div>\n                  <div><u>permissions</u></div>\n                </div>\n              }\n              {\n                props.sharedEmails.map((email, i) => \n                  props.isNarrow\n                    ? <div className=\"narrowContributorContainer\">\n                        <div className=\"emailContainer\">\n                          {email}\n                        </div>\n                        <div className=\"permissionActions\">\n                          {props.owner !== email &&\n                            <>\n                              <div className=\"roleSelectorContainer withMargin\">\n                                <select \n                                  onChange={e => handlePermissionsChange(email, e.target.value)} \n                                  className=\"roleSelector\"\n                                  value={props.admins.includes(email) ? \"admin\" : \"basic\"}\n                                  disabled={!props.admins.includes(props.user.email)}>\n                                  <option>basic</option>\n                                  <option>admin</option>\n                                </select>\n                              </div>\n                              {\n                                props.admins.includes(props.user.email) && \n                                <div className=\"removePersonContainer withMargin\">\n                                  <button onClick={() => revokeAllPermissions(email)} className=\"removePerson\">remove</button>\n                                </div>\n                              }\n                            </>\n                          }\n                        </div>\n                      </div>\n                    : <div key={i} className=\"permissionsRow\">\n                      <div>\n                        <div className=\"emailBubble\">{email}</div> {props.owner === email && <span className=\"ownerText\">(owner)</span>}\n                      </div>\n                      {\n                        props.owner !== email &&\n                          <>\n                            <div className=\"roleSelectorContainer\">\n                              <select \n                                onChange={e => handlePermissionsChange(email, e.target.value)} \n                                className=\"roleSelector\"\n                                value={props.admins.includes(email) ? \"admin\" : \"basic\"}\n                                disabled={!props.admins.includes(props.user.email)}>\n                                <option>basic</option>\n                                <option>admin</option>\n                              </select>\n                            </div>\n                            {\n                              props.admins.includes(props.user.email) && \n                              <div className=\"removePersonContainer\">\n                                <button onClick={() => revokeAllPermissions(email)} className=\"removePerson\">remove</button>\n                              </div>\n                            }\n                          </>\n                      }\n                    </div>\n                )\n              }\n            </div>\n          </div>\n          <div className=\"innerContainer\">\n            {\n              props.pendingInvitations.length > 0 && <>\n                <div className=\"subheader\">pending invites</div>\n                {\n                  props.pendingInvitations.map((email, i) => \n                    <div key={i} className=\"pendingEmailContainer\">\n                      <div className=\"emailBubble\">\n                        {email}\n                        <button \n                          className=\"deletePending\" \n                          onClick={() => props.removeFromListField(props.currentListId, \"pendingInvitations\", email)}>\n                            ×\n                        </button>\n                      </div>\n                    </div>\n                  )\n                }\n              </>\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n    </>\n  )\n}\n","import { useState } from \"react\";\n// import AccountIcon from \"./../../images/account_icon.png\"\nimport \"./SignedInStatus.css\";\n\nexport default function SignedInStatus(props) {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [sentVerificationEmail, setSentVerificationEmail] = useState(false);\n\n  const verifyEmailCallback = () => {\n    props.user.sendEmailVerification();\n    setSentVerificationEmail(true);\n  }\n\n  return (\n    <div>\n      <div className=\"accountIconDiv\" onClick={() => setIsExpanded(!isExpanded)}>\n        <div className=\"accountIcon\">\n          <div className=\"accountLetter\">\n            🦑\n          </div>\n          {\n            !props.user.emailVerified && <div className=\"notification\">_</div>\n          }\n        </div>\n        <div className={`expandCaretDiv ${isExpanded ? \"flipped\" : \"\"}`}>⌵</div>\n      </div>\n      {\n        isExpanded && <div className=\"accountPanel\">\n          <div className=\"userEmail\">\n            {props.user.email}\n          </div>\n          {\n            !props.user.emailVerified && <div>\n              <button onClick={() => verifyEmailCallback()} className=\"accountButton validateButton\">\n                {sentVerificationEmail ? \"resend verification email\" : \"send verification email\"}\n              </button>\n            </div>\n          }\n          <div>\n            <button onClick={() => props.auth.signOut()} className=\"accountButton signOutButton\">sign out</button>\n          </div>\n        </div>\n      }\n    </div>\n  )\n}\n","import './TaskView.css';\nimport TaskList from './TaskList';\nimport CompletedSection from './CompletedSection';\nimport AddItem from './../AddItem';\nimport OptionSelector from './../OptionSelector';\nimport ListSideMenu from './ListSideMenu';\nimport { useState } from 'react';\nimport InfoCard from './../InfoCard';\nimport SharingPanel from './../AuthAndSharing/SharingPanel';\nimport SignedInStatus from '../AuthAndSharing/SignedInStatus';\n\nconst SORTING_OPTIONS = [['oldestTop', 'oldest'], ['newestTop', 'newest'], ['taskName', 'name'], ['priority', 'priority']];\n\nfunction TaskView(props) {\n  return props.isDesktopWide ? \n    <div className=\"pageColumnsDiv\">\n      <div className=\"listSelector\">\n        <ListSideMenu lists={props.lists} setCurrentListId={props.setCurrentListId} currentListId={props.currentListId} />\n      </div>\n      <div>\n        <TasksApp {...props} />\n      </div>\n    </div> : <TasksApp {...props} />;\n}\n\nfunction TasksApp(props) {\n  const [expandedTaskId, setExpandedTaskId] = useState(null);\n  const [showSharingPanel, setShowSharingPanel] = useState(false);\n  const currentList = props.lists.find(list => list.id === props.currentListId);\n\n  const toggleExpandedTaskId = (id) => {\n    setExpandedTaskId(expandedTaskId === id ? null : id);\n  }\n\n  function addTaskAndEdit() {\n    const id = props.addTask();\n    props.setTaskInEditModeId(id);\n    setExpandedTaskId(id);\n  }\n\n  return (\n      <div>\n        {\n          showSharingPanel && <SharingPanel onClosePanel={() => setShowSharingPanel(false)}\n                                            addToListField={props.addToListField}\n                                            currentListId={props.currentListId}\n                                            sharedEmails={currentList.sharedWith}\n                                            admins={currentList.admins}\n                                            removeFromListField={props.removeFromListField}\n                                            owner={currentList.owner}\n                                            pendingInvitations={currentList.pendingInvitations}\n                                            user={props.user}\n                                            colorTheme={currentList.colorTheme}\n                                            isNarrow={props.isNarrow} />\n        }\n        <div className=\"titleHeaderRow\">\n          <button   onClick={() => props.setCurrentListId(null)} \n                    className=\"backButton\" \n                    aria-label=\"back to list menu\">\n                      ← back\n          </button>\n          <div className=\"titleHeader\">\n            <h2 className={currentList ? `color_${currentList.colorTheme}_ul` : ''}>\n              {currentList.listName}\n            </h2>\n          </div>\n          <div className=\"authPanelContainerTaskView\">\n            <SignedInStatus auth={props.auth} user={props.user} />\n          </div>\n        </div>\n        <div className=\"pageContent\">\n          <div className=\"noTopMargin\">\n            <div className=\"sortByText\">sort by:</div>\n            <OptionSelector options={SORTING_OPTIONS} onChangeCallback={props.setOrderingBy} />\n            <button className=\"sharingButton\" onClick={() => setShowSharingPanel(true)}>\n              share\n            </button>\n          </div>\n          {\n            props.loading ? <InfoCard /> : \n            props.error ? <InfoCard error={props.error} /> :\n            <>\n              {props.data.filter(taskItem => !taskItem.isCompleted).length === 0 && \n                <button className=\"noTasksPlaceholder\" onClick={addTaskAndEdit}>\n                  add a task!\n                </button>\n              }\n              <TaskList tasks={props.data.filter(taskItem => !taskItem.isCompleted)} \n                        setTaskProperty={props.setTaskProperty} \n                        deleteTask={props.deleteTask}\n                        taskInEditModeId={props.taskInEditModeId}\n                        setTaskInEditModeId={props.setTaskInEditModeId}\n                        toggleExpandedTaskId={toggleExpandedTaskId}\n                        expandedTaskId={expandedTaskId}\n                        color={currentList.colorTheme}\n                        />\n              {\n                props.data.filter(taskItem => taskItem.isCompleted).length === 0\n                  ? ''\n                  : <CompletedSection \n                      deleteCompleted={props.deleteCompleted}\n                      tasks={props.data.filter(taskItem => taskItem.isCompleted)}\n                      setTaskProperty={props.setTaskProperty}\n                      deleteTask={props.deleteTask}/>\n              }\n            </>\n          }\n        </div>\n        <AddItem \n          inEditMode={props.taskInEditModeId !== null || props.loading ? true : false} \n          addTaskAndEdit={addTaskAndEdit}\n          isNarrow={props.isNarrow}\n          longText={\"add task\"}\n          color={`color_${currentList.colorTheme}_bg`} />\n      </div>\n  );\n}\n\nexport default TaskView;","import { useCollection } from \"react-firebase-hooks/firestore\";\nimport firebase from 'firebase/compat';\nimport { generateUniqueID } from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport TaskView from \"./TaskView\";\nimport { useEffect, useState } from \"react\";\nimport { useMediaQuery } from 'react-responsive';\n\nexport default function TaskSupplier(props) {\n  const [frozenTask, setFrozenTask] = useState(null);\n  const [taskInEditModeId, setTaskInEditModeId] = useState(null);\n  const [orderingBy, setOrderingBy] = useState(\"created\");\n  const taskQuery = props.db.collection(props.collectionName).doc(props.currentListId).collection(\"tasks\");\n  const [taskCollection, tasksLoading, tasksError] = useCollection(taskQuery);\n  const isNarrow = useMediaQuery({maxWidth: 500});\n  const isDesktopWide = useMediaQuery({minWidth: 800});\n\n  if (tasksError) {\n    props.setCurrentListId(null);\n  }\n\n  const sortFunctions = {\n    priority: (a, b) => frozen(b)['priority'] - frozen(a)['priority'],\n    taskName: (a, b) => frozen(a)['taskName'].toLowerCase() < frozen(b)['taskName'].toLowerCase() ? -1 : 1,\n    newestTop: (a, b) => frozen(a)['created'] < frozen(b)['created'] ? 1 : -1,\n    oldestTop: (a, b) => frozen(a)['created'] < frozen(b)['created'] ? -1 : 1\n  }\n\n  useEffect(() => {\n    if (!tasksLoading && !tasksError) {\n      if (taskInEditModeId) {\n        setFrozenTask(\n          taskCollection.docs.map(doc => doc.data()).find(task => task.id === taskInEditModeId)\n        );\n      } else {\n        setFrozenTask(null);\n      }\n    }\n  // eslint-disable-next-line\n  }, [taskInEditModeId, tasksLoading, tasksError, (taskCollection && taskCollection.docs.length)]);\n\n  const frozen = (element) => {\n    return frozenTask && element.id === frozenTask.id ? frozenTask : element;\n  }\n\n  const setTaskProperty = (id, field, value) => {\n    const docRef = taskQuery.doc(id);\n    docRef.update({[field]: value});\n  }\n\n  const deleteTask = (id) => {\n    const docRef = taskQuery.doc(id);\n    docRef.delete();\n  }\n\n  const deleteCompleted = () => \n  taskCollection.docs.map(doc => doc.data()).filter(task => task.isCompleted).forEach(task => deleteTask(task.id));\n\n  const addTask = () => {\n    const new_id = generateUniqueID();\n    const docRef = taskQuery.doc(new_id);\n    docRef.set({\n      taskName: \"\",\n      isCompleted: false,\n      id: new_id,\n      created: firebase.database.ServerValue.TIMESTAMP,\n      priority: 0\n    });\n    return new_id;\n  }\n\n  const getSortedTasks = () => {\n    return tasksLoading\n      ? null\n      : taskCollection.docs.map(doc => doc.data()).sort(sortFunctions[orderingBy]);\n  }\n\n  return !tasksError && \n         <TaskView  {...props}\n                    setTaskProperty={setTaskProperty}\n                    deleteTask={deleteTask}\n                    deleteCompleted={deleteCompleted}\n                    setOrderingBy={setOrderingBy}\n                    addTask={addTask}\n                    data={getSortedTasks()}\n                    loading={tasksLoading}\n                    error={tasksError}\n                    taskInEditModeId={taskInEditModeId}\n                    setTaskInEditModeId={setTaskInEditModeId}\n                    isNarrow={isNarrow}\n                    isDesktopWide={isDesktopWide}\n                    lists={props.lists}\n                    addToListField={props.addToListField} />\n}","import { useRef, useEffect, useState } from \"react\";\nimport InputKeepCursor from \"./../InputKeepCursor\";\nimport { BlockPicker } from 'react-color';\nimport \"./ListCard.css\";\n\nconst DISAPPEAR_DURATION_MS = 500;\nconst COLOR_TO_NAME = {\n  \"#2274a5\": \"blue\",\n  \"#dc493a\": \"red\",\n  \"#662c91\": \"purple\",\n  \"#4a442d\": \"olive\",\n  \"#70ae6e\": \"green\",\n}\nconst NAME_TO_COLOR = Object.fromEntries(Object.entries(COLOR_TO_NAME).map(([k, v]) => [v, k]));\n\nexport default function ListCard(props) {\n  let textInput = useRef(null);\n  const [startDisappearing, setstartDisappearing] = useState(false);\n  const [showColorPicker, setShowColorPicker] = useState(false);\n  const listNameSpanAmount = props.isPendingList\n                              ? \"spanOne\"\n                              : props.sharedWith.includes(props.user.email)\n                                ? (props.owner === props.user.email\n                                    ? \"spanOne\"\n                                    : \"canSpanTwo\")\n                                : \"canSpanThree\"\n\n  useEffect(() => {\n    if (textInput.current && props.listInEditModeId === props.id) {\n      textInput.current.focus();\n    }\n  }, [props.listInEditModeId, props.id]);\n\n  const onBlurCallback = () => {\n    props.setListInEditModeId(null)\n    if (!props.listName) {\n      handleDeletion();\n    }\n  }\n\n  const handleDeletion = () => {\n    setstartDisappearing(true);\n    setTimeout(() => props.deleteList(props.id), DISAPPEAR_DURATION_MS);\n  }\n\n  return <div className={`listCard supportsInvisibility ${startDisappearing ? 'invisible' : ''} ${props.isPendingList ? \"notClickable\" : \"\"} ${props.owner !== props.user.email ? \"extraRow\" : \"\"}`}>\n    <div className=\"listCardLeftPanel\">\n      <button   onClick={() => setShowColorPicker(!showColorPicker)} \n                className={`colorDropdown ${(props.colorTheme !== 'default') ? `color_${props.colorTheme}_bg` : ''}`}\n                disabled={!props.admins.includes(props.user.email)}>\n        <div className={`dropDownArrow ${showColorPicker ? 'flipped' : ''} ${!props.admins.includes(props.user.email) ? \"transparentText\" : \"\"}`} aria-label={`Select color theme for list: ${props.listName}`}>\n          ⌵\n        </div>\n      </button>\n      {\n        showColorPicker && \n        <div className=\"colorPickerDiv\">\n          <BlockPicker\n            color={NAME_TO_COLOR[props.colorTheme]}\n            onChangeComplete={color => {props.setListProperty(props.id, \"colorTheme\", COLOR_TO_NAME[color.hex.toLowerCase()]); setShowColorPicker(false)}}\n            colors={Object.keys(COLOR_TO_NAME)}\n            className=\"float\"\n            triangle=\"hide\" />\n        </div>\n      }\n    </div>\n      {\n        props.listInEditModeId === props.id\n            ? <InputKeepCursor\n                value={props.listName}\n                onChange={e => props.setListProperty(props.id, \"listName\", e.target.value)}\n                onKeyUp={e => {if (e.key === 'Enter') onBlurCallback()}}\n                onBlur={() => onBlurCallback()}\n                returnRef={(ref) => {textInput = ref}}\n                className={`listNameInput ${listNameSpanAmount}`}\n                aria-label=\"edit list name\" />\n          : <div className={`listName ${listNameSpanAmount}`} onClick={() => !props.isPendingList && props.setCurrentListId(props.id)}>\n              {props.listName}\n            </div>\n      }\n      {\n        props.isPendingList\n          ? <>\n              <div className=\"acceptRejectSpanner\">\n                <button className=\"acceptRejectButton acceptButton\" onClick={() => props.onAcceptCallback()}>accept</button>\n                <button className=\"acceptRejectButton rejectButton\" onClick={() => props.onRejectCallback()}>reject</button>\n              </div>\n            </>\n          : <>\n              {props.owner === props.user.email ?\n                <button\n                  onClick={() => handleDeletion()}\n                  className=\"listActionButton linkButton deleteButton\"\n                  aria-label={`delete list: ${props.listName}`}>delete</button> : <div />\n              }\n              {props.admins.includes(props.user.email) ?\n                <button \n                  onClick={() => props.setListInEditModeId(props.id)}\n                  className=\"listActionButton linkButton editButton\"\n                  aria-label={`edit list name: ${props.listName}`}>edit</button> : <div />\n              }\n              {props.sharedWith.includes(props.user.email) ?\n                <button \n                  onClick={() => props.setCurrentListId(props.id)} \n                  className=\"listActionButton openButton\"\n                  aria-label={`view tasks in list: ${props.listName}`}>➔</button> : <div />\n              }\n            </>\n      }\n      {\n        props.owner !== props.user.email && <div className=\"ownerDisambiguator\">\n          {props.owner}\n        </div>\n      }\n    </div>\n}","import ListCard from \"./ListCard\";\nimport { useState } from \"react\";\nimport { useMediaQuery } from 'react-responsive';\nimport \"./ListViewer.css\";\nimport AddItem from \"./../AddItem\";\nimport InfoCard from \"./../InfoCard\";\nimport SignedInStatus from \"../AuthAndSharing/SignedInStatus\";\n\nexport default function ListViewer(props) {\n  const [listInEditModeId, setListInEditModeId] = useState(null);\n  const isNarrow = useMediaQuery({maxWidth: 500});\n\n  const addListCallback = () => {\n    setListInEditModeId(props.addList());\n  }\n\n  const removeFromPending = (id) => {\n    props.removeFromListField(id, \"pendingInvitations\", props.user.email);\n  }\n\n  const onAcceptCallback = (id) => {\n    props.addToListField(id, \"sharedWith\", props.user.email);\n    removeFromPending(id);\n  }\n\n  return <>\n      <div className=\"headerRow\">\n        <div className=\"todoHeader\">\n          <h4>\n            <span className=\"todo\">todo</span>\n          </h4>\n        </div>\n        <div className=\"authPanelContainer\">\n          <SignedInStatus auth={props.auth} user={props.user} />\n        </div>\n      </div>\n      <div className=\"listContainer\">\n        { props.loading ? <InfoCard /> :\n          props.error ? <InfoCard error={props.error} /> :\n            <>\n              {props.lists.length === 0 && \n                <button className=\"noListsPlaceholder\" onClick={addListCallback}>create a task list!</button>\n              }\n              {\n                props.lists.map(list => <ListCard \n                                          {...props}\n                                          {...list}\n                                          key={list.id} \n                                          listInEditModeId={listInEditModeId}\n                                          setListInEditModeId={setListInEditModeId} />)\n              }\n            </>\n          }\n      </div>\n      {\n        props.pendingLists.length !== 0 &&\n        (\n          !props.user.emailVerified\n            ? <div className=\"verifyToSeeContainer\">\n                <div className=\"verifyToSeeDiv\">\n                  <b>you have pending invites to join a collaborative list!</b>\n                  <hr />\n                  verify your email (in the account panel) to see them.\n                </div>\n              </div>\n            : <>\n                <div className=\"listContainer\">\n                  <div className=\"sectionHeader\">\n                    pending invitations\n                  </div>\n                  {\n                    <>\n                      {\n                        props.pendingLists.map(list => <ListCard \n                                                  {...props}\n                                                  {...list}\n                                                  key={list.id} \n                                                  listInEditModeId={listInEditModeId}\n                                                  setListInEditModeId={setListInEditModeId}\n                                                  isPendingList\n                                                  onAcceptCallback={() => onAcceptCallback(list.id)}\n                                                  onRejectCallback={() => removeFromPending(list.id)}/>)\n                      }\n                    </>\n                  }\n                </div>\n              </>\n        )\n      }\n      <AddItem \n        isNarrow={isNarrow} \n        addTaskAndEdit={addListCallback} \n        inEditMode={listInEditModeId}\n        longText={\"add list\"} />\n    </>\n}","import TaskSupplier from \"./TaskView/TaskSupplier\";\nimport { useState } from \"react\";\nimport { useCollection } from \"react-firebase-hooks/firestore\";\nimport ListViewer from \"./ListView/ListViewer\";\nimport { generateUniqueID } from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport firebase from 'firebase/compat';\nimport \"./App.css\";\n\nconst COLLECTION_NAME = \"lists-lab5\"\n\nexport default function App(props) {\n  const fullListData = props.db.collection(COLLECTION_NAME);\n  const listQuery = fullListData.where(\"sharedWith\", \"array-contains\", props.user.email);\n  const pendingListQuery = fullListData.where(\"pendingInvitations\", \"array-contains\", props.user.email);\n  const [listCollection, listsLoading, listsError] = useCollection(listQuery);\n  const [pendingCollection, pendingLoading, pendingError] = useCollection(pendingListQuery);\n  const [currentListId, setCurrentListId] = useState(null);\n\n  const deleteList = (id) => {\n    const docRef = fullListData.doc(id);\n    docRef.delete();\n  }\n\n  const addList = () => {\n    const new_id = generateUniqueID();\n    const docRef = fullListData.doc(new_id);\n    docRef.set({\n      listName: \"\",\n      id: new_id,\n      created: firebase.database.ServerValue.TIMESTAMP,\n      colorTheme: \"blue\",\n      owner: props.user.email,\n      admins: [props.user.email],\n      sharedWith: [props.user.email],\n      pendingInvitations: []\n    });\n    return new_id;\n  }\n\n  const setListProperty = (id, field, value) => {\n    const docRef = fullListData.doc(id);\n    docRef.update({[field]: value});\n  }\n\n  const addToListField = (id, field, value) => {\n    const docRef = fullListData.doc(id);\n    docRef.get().then(listResponse =>\n      !listResponse.data()[field].find(value_ => value === value_) && docRef.update({[field]: [...listResponse.data()[field], value]})\n    );\n  }\n\n  const removeFromListField = (id, field, value) => {\n    const docRef = fullListData.doc(id);\n    docRef.get().then(listResponse =>\n      docRef.update({[field]: listResponse.data()[field].filter(val => val !== value)})\n    );\n  }\n\n  return currentListId  ? <TaskSupplier currentListId={currentListId}\n                                        lists={!listsLoading && !listsError && listCollection.docs.map(doc => doc.data())}\n                                        db={props.db}\n                                        collectionName={COLLECTION_NAME}\n                                        setCurrentListId={setCurrentListId}\n                                        addToListField={addToListField}\n                                        removeFromListField={removeFromListField}\n                                        user={props.user}\n                                        auth={props.auth} />\n                        : <ListViewer lists={(listsLoading || listsError) ? [] : listCollection.docs.map(doc => doc.data())}\n                                      pendingLists={(pendingLoading || pendingError) ? [] : pendingCollection.docs.map(doc => doc.data())}\n                                      setCurrentListId={setCurrentListId} \n                                      deleteList={deleteList}\n                                      addList={addList}\n                                      setListProperty={setListProperty}\n                                      loading={listsLoading}\n                                      error={listsError}\n                                      user={props.user}\n                                      auth={props.auth}\n                                      addToListField={addToListField}\n                                      removeFromListField={removeFromListField}/>\n}","import firebase from \"firebase/compat\";\nimport { useState } from \"react\";\nimport { useSignInWithEmailAndPassword } from \"react-firebase-hooks/auth\";\nimport \"./LogIn.css\";\n\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\n\nexport default function LogIn(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const useSignInResponse = useSignInWithEmailAndPassword(props.auth);\n  const [signInWithEmailAndPassword, loading, error] = [useSignInResponse[0], useSignInResponse[2], useSignInResponse[3]];\n\n  return (\n    <>\n      <div className=\"authTitle\">\n        log in\n      </div>\n      <hr />\n      <form onSubmit={(e) => e.preventDefault()}>\n        <input value={email} onChange={e => setEmail(e.target.value)} placeholder=\"email\" type=\"email\" className=\"signInInput\"/>\n        <input value={password} onChange={e => setPassword(e.target.value)} placeholder=\"password\" type=\"password\" className=\"signInInput\" />\n        <button type=\"submit\" onClick={() => signInWithEmailAndPassword(email, password)} className=\"submitButton\">sign in</button>\n      </form>\n      {!loading && error && <div className=\"errorDiv\">\n          {\n            error.code === 'auth/invalid-email'\n              ? \"please provide a valid email address\"\n              : error.code === 'auth/internal-error'\n                  ? \"please re-check your username and password\"\n                  : error.code === 'auth/user-not-found'\n                    ? \"that user wasn't found; did you sign up?\"\n                    : error.code === 'auth/wrong-password'\n                      ? \"incorrect email or password\"\n                      : \"some error occurred; please try again\"\n          }\n        </div>\n      }\n      <hr />\n      <div className=\"centerContainer\">\n        <button onClick={() => props.auth.signInWithPopup(googleProvider)} className=\"useGoogleButton\">\n          <img  src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Google_%22G%22_Logo.svg/800px-Google_%22G%22_Logo.svg.png\"\n                className=\"googleLogo\"\n                alt=\"google logo\"/>\n          sign in with google\n        </button>\n      </div>\n    </>\n  )\n}","import { useState } from \"react\"\nimport { useCreateUserWithEmailAndPassword } from \"react-firebase-hooks/auth\";\n\nexport default function SignUp(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [retypePassword, setRetypePassword] = useState(\"\");\n  const [passwordMatchError, setPasswordMatchError] = useState(false);\n  const useSignInResponse = useCreateUserWithEmailAndPassword(props.auth);\n  const [createUserWithEmailAndPassword, loading, error] = [useSignInResponse[0], useSignInResponse[2], useSignInResponse[3]];\n\n  const onSignUpCallback = () => {\n    if (password !== retypePassword) {\n      setPasswordMatchError(true);\n    } else {\n      setPasswordMatchError(false);\n      createUserWithEmailAndPassword(email, password);\n    }\n  }\n\n  return (\n    <>\n      <div className=\"authTitle\">\n        sign up\n      </div>\n      <hr />\n      <form onSubmit={(e) => e.preventDefault()}>\n        <input value={email} onChange={e => setEmail(e.target.value)} placeholder=\"email\" type=\"email\" className=\"signInInput\"/>\n        <input value={password} onChange={e => setPassword(e.target.value)} placeholder=\"password\" type=\"password\" className=\"signInInput\" />\n        <input value={retypePassword} onChange={e => setRetypePassword(e.target.value)} placeholder=\"retype password\" type=\"password\" className=\"signInInput\" />\n        <button className=\"submitButton\" type=\"submit\" onClick={() => onSignUpCallback()}>sign up</button>\n      </form>\n      {!loading && (error || passwordMatchError) && \n        <div className=\"errorDiv\">\n            {\n              passwordMatchError\n                ? \"passwords do not match\"\n                : error.code === 'auth/invalid-email'\n                    ? \"please provide a valid email address\"\n                    : error.code === 'auth/internal-error'\n                        ? \"please re-check your username and password\"\n                        : error.code === 'auth/weak-password'\n                          ? \"passwords must be at least 6 characters long\"\n                          : \"some error occurred; please try again\"\n            }\n          </div>\n      }\n    </>\n  )\n}","import { useState } from \"react\";\nimport LogIn from \"./LogIn\";\nimport SignUp from \"./SignUp\";\nimport \"./UnauthenticatedPage.css\";\n\nexport default function UnauthenticatedPage(props) {\n  const [showLogIn, setShowLogIn] = useState(true);\n  return (\n    <>\n      <div className=\"header\">\n        <h4>\n          <span className=\"todo\">todo</span> 🦑\n        </h4>\n      </div>\n      <div className=\"centerContainer\">\n        <div className=\"authenticationContainer\">\n          {\n            showLogIn\n              ? <LogIn auth={props.auth} showSignUp={() => setShowLogIn(false)} />\n              : <SignUp auth={props.auth} showLogIn={() => setShowLogIn(true)}/>\n          }\n        </div>\n        <div className=\"signInSignUpSwitcher\" onClick={() => setShowLogIn(!showLogIn)}>\n          {\n            showLogIn\n              ? <>don't have an account? <u>sign up</u></>\n              : <>already have an account? <u>sign in</u></>\n          }\n        </div>\n      </div>\n    </>\n  )\n}","import React from 'react'\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport App from './App';\nimport UnauthenticatedPage from './AuthAndSharing/UnauthenticatedPage';\nimport \"./AuthenticationLayer.css\"\n\nexport default function AuthenticationLayer(props) {\n  const [user, userLoading, userError] = useAuthState(props.auth);\n\n  return (\n    !(userLoading || userError) && <div className=\"minWidthContainer\">\n      {user\n        ? <App db={props.db} auth={props.auth} user={user} />\n        : <UnauthenticatedPage auth={props.auth} />}\n      </div>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport firebase from \"firebase/compat\";\nimport AuthenticationLayer from './Components/AuthenticationLayer';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAZ7Q00Z5zGKg2DOwM4qGRsPRgbRIsAoRw\",\n  authDomain: \"todosquid-adb18.firebaseapp.com\",\n  projectId: \"todosquid-adb18\",\n  storageBucket: \"todosquid-adb18.appspot.com\",\n  messagingSenderId: \"650094165810\",\n  appId: \"1:650094165810:web:ed005ab5e0d9790ae4212b\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\nconst auth = firebase.auth();\n\nfunction render() {\n  ReactDOM.render(\n    <React.StrictMode>\n      <AuthenticationLayer db={db} auth={auth} />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\nrender();"],"sourceRoot":""}